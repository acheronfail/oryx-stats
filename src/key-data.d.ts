
// This file is generated by running `yarn get-key-data`!
export enum KeyCode {
        /**
     * Ú
     */
    US_UACU = 'US_UACU',
    /**
     * ¬
     */
    US_NOT = 'US_NOT',
    /**
     * #
     */
    US_HASH = 'US_HASH',
    /**
     * ^
     */
    US_CIRC = 'US_CIRC',
    /**
     * ¦
     */
    US_BRKP = 'US_BRKP',
    /**
     * ?
     */
    US_QUES = 'US_QUES',
    /**
     * ¤
     */
    US_CURR = 'US_CURR',
    /**
     * ¢
     */
    US_CENT = 'US_CENT',
    /**
     * ´
     */
    US_ACUT = 'US_ACUT',
    /**
     * *
     */
    US_ASTR = 'US_ASTR',
    /**
     * Ü
     */
    US_UDIA = 'US_UDIA',
    /**
     * <
     */
    US_LABK = 'US_LABK',
    /**
     * )
     */
    US_RPRN = 'US_RPRN',
    /**
     * Á
     */
    US_AACU = 'US_AACU',
    /**
     * ¼
     */
    US_QRTR = 'US_QRTR',
    /**
     * ×
     */
    US_MUL = 'US_MUL',
    /**
     * µ
     */
    US_MICR = 'US_MICR',
    /**
     * $
     */
    US_DLR = 'US_DLR',
    /**
     * £
     */
    US_PND = 'US_PND',
    /**
     * Ä
     */
    US_ADIA = 'US_ADIA',
    /**
     * ²
     */
    US_SUP2 = 'US_SUP2',
    /**
     * !
     */
    US_EXLM = 'US_EXLM',
    /**
     * Æ
     */
    US_AE = 'US_AE',
    /**
     * ®
     */
    US_REGD = 'US_REGD',
    /**
     * ß
     */
    US_SS = 'US_SS',
    /**
     * Ó
     */
    US_OACU = 'US_OACU',
    /**
     * ‘
     */
    US_LSQU = 'US_LSQU',
    /**
     * >
     */
    US_RABK = 'US_RABK',
    /**
     * :
     */
    US_COLN = 'US_COLN',
    /**
     * " (dead)
     */
    US_DQUO = 'US_DQUO',
    /**
     * ©
     */
    US_COPY = 'US_COPY',
    /**
     * |
     */
    US_PIPE = 'US_PIPE',
    /**
     * €
     */
    US_EURO = 'US_EURO',
    /**
     * _
     */
    US_UNDS = 'US_UNDS',
    /**
     * }
     */
    US_RCBR = 'US_RCBR',
    /**
     * ¿
     */
    US_IQUE = 'US_IQUE',
    /**
     * Ö
     */
    US_ODIA = 'US_ODIA',
    /**
     * {
     */
    US_LCBR = 'US_LCBR',
    /**
     * Ç
     */
    US_CCED = 'US_CCED',
    /**
     * "
     */
    US_AT = 'US_AT',
    /**
     * ¹
     */
    US_SUP1 = 'US_SUP1',
    /**
     * »
     */
    US_RDAQ = 'US_RDAQ',
    /**
     * ÷
     */
    US_DIV = 'US_DIV',
    /**
     * &
     */
    US_AMPR = 'US_AMPR',
    /**
     * %
     */
    US_PERC = 'US_PERC',
    /**
     * (
     */
    US_LPRN = 'US_LPRN',
    /**
     * °
     */
    US_DEG = 'US_DEG',
    /**
     * Ñ
     */
    US_NTIL = 'US_NTIL',
    /**
     * +
     */
    US_PLUS = 'US_PLUS',
    /**
     * Ð
     */
    US_ETH = 'US_ETH',
    /**
     * ³
     */
    US_SUP3 = 'US_SUP3',
    /**
     * ~ (dead)
     */
    US_TILD = 'US_TILD',
    /**
     * ¥
     */
    US_YEN = 'US_YEN',
    /**
     * ¡
     */
    US_IEXL = 'US_IEXL',
    /**
     * ¨
     */
    US_DIAE = 'US_DIAE',
    /**
     * Þ
     */
    US_THRN = 'US_THRN',
    /**
     * «
     */
    US_LDAQ = 'US_LDAQ',
    /**
     * ½
     */
    US_HALF = 'US_HALF',
    /**
     * ’
     */
    US_RSQU = 'US_RSQU',
    /**
     * ¾
     */
    US_TQTR = 'US_TQTR',
    /**
     * §
     */
    US_SECT = 'US_SECT',
    /**
     * É
     */
    US_EACU = 'US_EACU',
    /**
     * Å
     */
    US_ARNG = 'US_ARNG',
    /**
     * Ø
     */
    US_OSTR = 'US_OSTR',
    /**
     * ¶
     */
    US_PILC = 'US_PILC',
    /**
     * Í
     */
    US_IACU = 'US_IACU',
    /**
     * LT → Raise- Momentary Raise Toggle: Switch to Raise when held, send the selected key when tapped
     */
    RAISE_LT = 'RAISE_LT',
    /**
     * LM- Momentary Layer Toggle + Modifier: Switch to the selected layer when held, with the selected modifier active.
     */
    LM = 'LM',
    /**
     * LT- Momentary Layer Toggle: Switch to the selected layer when held, send the selected key when tapped
     */
    LT = 'LT',
    /**
     * null
     */
    index = 'index',
    /**
     * LT → Lower- Momentary Lower Toggle: Switch to Lower when held, send the selected key when tapped
     */
    LOWER_LT = 'LOWER_LT',
    /**
     * Macro2 Rec- Start recording macro 2
     */
    DYN_REC_START2 = 'DYN_REC_START2',
    /**
     * Macro1 Rec- Start recording macro 1
     */
    DYN_REC_START1 = 'DYN_REC_START1',
    /**
     * Macro Stop Rec- Stop recording the current macro
     */
    DYN_REC_STOP = 'DYN_REC_STOP',
    /**
     * Macro1 Play- Replay macro 1
     */
    DYN_MACRO_PLAY1 = 'DYN_MACRO_PLAY1',
    /**
     * Macro2 Play- Replay macro 2
     */
    DYN_MACRO_PLAY2 = 'DYN_MACRO_PLAY2',
    /**
     * O
     */
    CZ_O = 'CZ_O',
    /**
     * ` (dead)
     */
    CZ_GRV = 'CZ_GRV',
    /**
     * W
     */
    CZ_W = 'CZ_W',
    /**
     * '
     */
    CZ_QUOT = 'CZ_QUOT',
    /**
     * F
     */
    CZ_F = 'CZ_F',
    /**
     * á
     */
    CZ_AACU = 'CZ_AACU',
    /**
     * [
     */
    CZ_LBRC = 'CZ_LBRC',
    /**
     * ˇ (dead)
     */
    CZ_CARN = 'CZ_CARN',
    /**
     * š
     */
    CZ_SCAR = 'CZ_SCAR',
    /**
     * ř
     */
    CZ_RCAR = 'CZ_RCAR',
    /**
     * U
     */
    CZ_U = 'CZ_U',
    /**
     * H
     */
    CZ_H = 'CZ_H',
    /**
     * .
     */
    CZ_DOT = 'CZ_DOT',
    /**
     * Đ
     */
    CZ_CDST = 'CZ_CDST',
    /**
     * V
     */
    CZ_V = 'CZ_V',
    /**
     * ,
     */
    CZ_COMM = 'CZ_COMM',
    /**
     * _
     */
    CZ_UNDS = 'CZ_UNDS',
    /**
     * !
     */
    CZ_EXLM = 'CZ_EXLM',
    /**
     * D
     */
    CZ_D = 'CZ_D',
    /**
     * C
     */
    CZ_C = 'CZ_C',
    /**
     * ~
     */
    CZ_TILD = 'CZ_TILD',
    /**
     * 7
     */
    CZ_7 = 'CZ_7',
    /**
     * K
     */
    CZ_K = 'CZ_K',
    /**
     * S
     */
    CZ_S = 'CZ_S',
    /**
     * I
     */
    CZ_I = 'CZ_I',
    /**
     * Q
     */
    CZ_Q = 'CZ_Q',
    /**
     * |
     */
    CZ_PIPE = 'CZ_PIPE',
    /**
     * 2
     */
    CZ_2 = 'CZ_2',
    /**
     * ¨ (dead)
     */
    CZ_DIAE = 'CZ_DIAE',
    /**
     * č
     */
    CZ_CCAR = 'CZ_CCAR',
    /**
     * Y
     */
    CZ_Y = 'CZ_Y',
    /**
     * 8
     */
    CZ_8 = 'CZ_8',
    /**
     * Ł
     */
    CZ_CLST = 'CZ_CLST',
    /**
     * đ
     */
    CZ_LDST = 'CZ_LDST',
    /**
     * í
     */
    CZ_IACU = 'CZ_IACU',
    /**
     * /
     */
    CZ_SLSH = 'CZ_SLSH',
    /**
     * P
     */
    CZ_P = 'CZ_P',
    /**
     * ß
     */
    CZ_SS = 'CZ_SS',
    /**
     * 5
     */
    CZ_5 = 'CZ_5',
    /**
     * L
     */
    CZ_L = 'CZ_L',
    /**
     * 0
     */
    CZ_0 = 'CZ_0',
    /**
     * "
     */
    CZ_DQUO = 'CZ_DQUO',
    /**
     * ů
     */
    CZ_URNG = 'CZ_URNG',
    /**
     * é
     */
    CZ_EACU = 'CZ_EACU',
    /**
     * N
     */
    CZ_N = 'CZ_N',
    /**
     * ě
     */
    CZ_ECAR = 'CZ_ECAR',
    /**
     * ]
     */
    CZ_RBRC = 'CZ_RBRC',
    /**
     * <
     */
    CZ_LABK = 'CZ_LABK',
    /**
     * §
     */
    CZ_SECT = 'CZ_SECT',
    /**
     * (
     */
    CZ_LPRN = 'CZ_LPRN',
    /**
     * ł
     */
    CZ_LLST = 'CZ_LLST',
    /**
     * ˝ (dead)
     */
    CZ_DACU = 'CZ_DACU',
    /**
     * ¤
     */
    CZ_CURR = 'CZ_CURR',
    /**
     * &
     */
    CZ_AMPR = 'CZ_AMPR',
    /**
     * ´ (dead)
     */
    CZ_ACUT = 'CZ_ACUT',
    /**
     * ˙ (dead)
     */
    CZ_DOTA = 'CZ_DOTA',
    /**
     * ;
     */
    CZ_SCLN = 'CZ_SCLN',
    /**
     * €
     */
    CZ_EURO = 'CZ_EURO',
    /**
     * @
     */
    CZ_AT = 'CZ_AT',
    /**
     * ˛ (dead)
     */
    CZ_OGON = 'CZ_OGON',
    /**
     * ÷
     */
    CZ_DIV = 'CZ_DIV',
    /**
     * \
     */
    CZ_BSLS = 'CZ_BSLS',
    /**
     * ˘ (dead)
     */
    CZ_BREV = 'CZ_BREV',
    /**
     * ×
     */
    CZ_MUL = 'CZ_MUL',
    /**
     * ú
     */
    CZ_UACU = 'CZ_UACU',
    /**
     * #
     */
    CZ_HASH = 'CZ_HASH',
    /**
     * %
     */
    CZ_PERC = 'CZ_PERC',
    /**
     * T
     */
    CZ_T = 'CZ_T',
    /**
     * *
     */
    CZ_ASTR = 'CZ_ASTR',
    /**
     * )
     */
    CZ_RPRN = 'CZ_RPRN',
    /**
     * J
     */
    CZ_J = 'CZ_J',
    /**
     * A
     */
    CZ_A = 'CZ_A',
    /**
     * =
     */
    CZ_EQL = 'CZ_EQL',
    /**
     * >
     */
    CZ_RABK = 'CZ_RABK',
    /**
     * G
     */
    CZ_G = 'CZ_G',
    /**
     * 4
     */
    CZ_4 = 'CZ_4',
    /**
     * M
     */
    CZ_M = 'CZ_M',
    /**
     * X
     */
    CZ_X = 'CZ_X',
    /**
     * ^ (dead)
     */
    CZ_CIRC = 'CZ_CIRC',
    /**
     * :
     */
    CZ_COLN = 'CZ_COLN',
    /**
     * ¸ (dead)
     */
    CZ_CEDL = 'CZ_CEDL',
    /**
     * B
     */
    CZ_B = 'CZ_B',
    /**
     * ž
     */
    CZ_ZCAR = 'CZ_ZCAR',
    /**
     * E
     */
    CZ_E = 'CZ_E',
    /**
     * -
     */
    CZ_MINS = 'CZ_MINS',
    /**
     * 1
     */
    CZ_1 = 'CZ_1',
    /**
     * +
     */
    CZ_PLUS = 'CZ_PLUS',
    /**
     * R
     */
    CZ_R = 'CZ_R',
    /**
     * Z
     */
    CZ_Z = 'CZ_Z',
    /**
     * 6
     */
    CZ_6 = 'CZ_6',
    /**
     * 4
     */
    EE_4 = 'EE_4',
    /**
     * 3
     */
    CZ_3 = 'CZ_3',
    /**
     * 9
     */
    CZ_9 = 'CZ_9',
    /**
     * }
     */
    CZ_RCBR = 'CZ_RCBR',
    /**
     * $
     */
    CZ_DLR = 'CZ_DLR',
    /**
     * ý
     */
    CZ_YACU = 'CZ_YACU',
    /**
     * ° (dead)
     */
    CZ_RNGA = 'CZ_RNGA',
    /**
     * {
     */
    CZ_LCBR = 'CZ_LCBR',
    /**
     * Autoshift report- Report your current Auto Shift timeout value
     */
    KC_ASRP = 'KC_ASRP',
    /**
     * Autoshift toggle- Toggles the state of the Auto Shift feature
     */
    KC_ASTG = 'KC_ASTG',
    /**
     * Autoshift on- Turns on the Auto Shift Function
     */
    KC_ASON = 'KC_ASON',
    /**
     * Autoshift off- Turns off the Auto Shift Function
     */
    KC_ASOFF = 'KC_ASOFF',
    /**
     * Autoshift timeout up- Raise the Auto Shift timeout variable (up)
     */
    KC_ASUP = 'KC_ASUP',
    /**
     * Autoshift timeout down- Lower the Auto Shift timeout variable (down)
     */
    KC_ASDN = 'KC_ASDN',
    /**
     * 4
     */
    BE_4 = 'BE_4',
    /**
     * ?
     */
    BE_QUES = 'BE_QUES',
    /**
     * A
     */
    BE_A = 'BE_A',
    /**
     * APOS
     */
    BE_APOS = 'BE_APOS',
    /**
     * F
     */
    BE_F = 'BE_F',
    /**
     * @
     */
    BE_AT = 'BE_AT',
    /**
     * TILT
     */
    BE_TILT = 'BE_TILT',
    /**
     * _
     */
    BE_UNDS = 'BE_UNDS',
    /**
     * 1
     */
    BE_1 = 'BE_1',
    /**
     * !
     */
    BE_EXLM = 'BE_EXLM',
    /**
     * G
     */
    BE_G = 'BE_G',
    /**
     * LESS
     */
    BE_LESS = 'BE_LESS',
    /**
     * {
     */
    BE_LCBR = 'BE_LCBR',
    /**
     * (
     */
    BE_LPRN = 'BE_LPRN',
    /**
     * µ
     */
    BE_MICR = 'BE_MICR',
    /**
     * L
     */
    BE_L = 'BE_L',
    /**
     * -
     */
    BE_MINS = 'BE_MINS',
    /**
     * ´ (dead)
     */
    BE_ACUT = 'BE_ACUT',
    /**
     * #
     */
    BE_HASH = 'BE_HASH',
    /**
     * UMLT
     */
    BE_UMLT = 'BE_UMLT',
    /**
     * B
     */
    BE_B = 'BE_B',
    /**
     * è
     */
    BE_EGRV = 'BE_EGRV',
    /**
     * 9
     */
    BE_9 = 'BE_9',
    /**
     * '
     */
    BE_QUOT = 'BE_QUOT',
    /**
     * N
     */
    BE_N = 'BE_N',
    /**
     * :
     */
    BE_COLN = 'BE_COLN',
    /**
     * (backslash)
     */
    BE_BSLS = 'BE_BSLS',
    /**
     * Q
     */
    BE_Q = 'BE_Q',
    /**
     * [
     */
    BE_LBRC = 'BE_LBRC',
    /**
     * X
     */
    BE_X = 'BE_X',
    /**
     * S
     */
    BE_S = 'BE_S',
    /**
     * PARA
     */
    BE_PARA = 'BE_PARA',
    /**
     * }
     */
    BE_RCBR = 'BE_RCBR',
    /**
     * )
     */
    BE_RPRN = 'BE_RPRN',
    /**
     * ]
     */
    BE_RBRC = 'BE_RBRC',
    /**
     * Shift )
     */
    BE_RSPC = 'BE_RSPC',
    /**
     * MU
     */
    BE_MU = 'BE_MU',
    /**
     * 6
     */
    BE_6 = 'BE_6',
    /**
     * LSBR
     */
    BE_LSBR = 'BE_LSBR',
    /**
     * "
     */
    BE_DQUO = 'BE_DQUO',
    /**
     * £
     */
    BE_PND = 'BE_PND',
    /**
     * °
     */
    BE_DEG = 'BE_DEG',
    /**
     * ¨ (dead)
     */
    BE_DIAE = 'BE_DIAE',
    /**
     * 8
     */
    BE_8 = 'BE_8',
    /**
     * $
     */
    BE_DLR = 'BE_DLR',
    /**
     * Shift (
     */
    BE_LSPO = 'BE_LSPO',
    /**
     * <
     */
    BE_LABK = 'BE_LABK',
    /**
     * ^
     */
    BE_CIRC = 'BE_CIRC',
    /**
     * 7
     */
    BE_7 = 'BE_7',
    /**
     * é
     */
    BE_EACU = 'BE_EACU',
    /**
     * V
     */
    BE_V = 'BE_V',
    /**
     * C
     */
    BE_C = 'BE_C',
    /**
     * RSBR
     */
    BE_RSBR = 'BE_RSBR',
    /**
     * >
     */
    BE_RABK = 'BE_RABK',
    /**
     * .
     */
    BE_DOT = 'BE_DOT',
    /**
     * €
     */
    BE_EURO = 'BE_EURO',
    /**
     * Y
     */
    BE_Y = 'BE_Y',
    /**
     * ù
     */
    BE_UGRV = 'BE_UGRV',
    /**
     * P
     */
    BE_P = 'BE_P',
    /**
     * ;
     */
    BE_SCLN = 'BE_SCLN',
    /**
     * T
     */
    BE_T = 'BE_T',
    /**
     * I
     */
    BE_I = 'BE_I',
    /**
     * E
     */
    BE_E = 'BE_E',
    /**
     * OVRR
     */
    BE_OVRR = 'BE_OVRR',
    /**
     * à
     */
    BE_AGRV = 'BE_AGRV',
    /**
     * §
     */
    BE_SECT = 'BE_SECT',
    /**
     * R
     */
    BE_R = 'BE_R',
    /**
     * AMP
     */
    BE_AMP = 'BE_AMP',
    /**
     * +
     */
    BE_PLUS = 'BE_PLUS',
    /**
     * H
     */
    BE_H = 'BE_H',
    /**
     * D
     */
    BE_D = 'BE_D',
    /**
     * &
     */
    BE_AMPR = 'BE_AMPR',
    /**
     * U
     */
    BE_U = 'BE_U',
    /**
     * %
     */
    BE_PERC = 'BE_PERC',
    /**
     * ³
     */
    BE_SUP3 = 'BE_SUP3',
    /**
     * ^ (dead)
     */
    BE_DCIR = 'BE_DCIR',
    /**
     * 5
     */
    BE_5 = 'BE_5',
    /**
     * ` (dead)
     */
    BE_GRV = 'BE_GRV',
    /**
     * ~
     */
    BE_TILD = 'BE_TILD',
    /**
     * 3
     */
    BE_3 = 'BE_3',
    /**
     * |
     */
    BE_PIPE = 'BE_PIPE',
    /**
     * K
     */
    BE_K = 'BE_K',
    /**
     * /
     */
    BE_SLSH = 'BE_SLSH',
    /**
     * =
     */
    BE_EQL = 'BE_EQL',
    /**
     * ,
     */
    BE_COMM = 'BE_COMM',
    /**
     * ²
     */
    BE_SUP2 = 'BE_SUP2',
    /**
     * *
     */
    BE_ASTR = 'BE_ASTR',
    /**
     * 0
     */
    BE_0 = 'BE_0',
    /**
     * Z
     */
    BE_Z = 'BE_Z',
    /**
     * W
     */
    BE_W = 'BE_W',
    /**
     * J
     */
    BE_J = 'BE_J',
    /**
     * ç
     */
    BE_CCED = 'BE_CCED',
    /**
     * O
     */
    BE_O = 'BE_O',
    /**
     * GRTR
     */
    BE_GRTR = 'BE_GRTR',
    /**
     * M
     */
    BE_M = 'BE_M',
    /**
     * 2
     */
    BE_2 = 'BE_2',
    /**
     * )
     */
    RU_RPRN = 'RU_RPRN',
    /**
     * П
     */
    RU_PE = 'RU_PE',
    /**
     * .
     */
    RU_DOT = 'RU_DOT',
    /**
     * ₽
     */
    RU_RUBL = 'RU_RUBL',
    /**
     * №
     */
    RU_NUM = 'RU_NUM',
    /**
     * \
     */
    RU_BSLS = 'RU_BSLS',
    /**
     * Х
     */
    RU_HA = 'RU_HA',
    /**
     * (
     */
    RU_LPRN = 'RU_LPRN',
    /**
     * К
     */
    RU_KA = 'RU_KA',
    /**
     * Ф
     */
    RU_EF = 'RU_EF',
    /**
     * Ч
     */
    RU_CHE = 'RU_CHE',
    /**
     * И
     */
    RU_I = 'RU_I',
    /**
     * Г
     */
    RU_GHE = 'RU_GHE',
    /**
     * Ё
     */
    RU_YO = 'RU_YO',
    /**
     * -
     */
    RU_MINS = 'RU_MINS',
    /**
     * Ц
     */
    RU_TSE = 'RU_TSE',
    /**
     * ,
     */
    RU_COMM = 'RU_COMM',
    /**
     * Щ
     */
    RU_SHCH = 'RU_SHCH',
    /**
     * %
     */
    RU_PERC = 'RU_PERC',
    /**
     * Ь
     */
    RU_SOFT = 'RU_SOFT',
    /**
     * А
     */
    RU_A = 'RU_A',
    /**
     * "
     */
    RU_DQUO = 'RU_DQUO',
    /**
     * Т
     */
    RU_TE = 'RU_TE',
    /**
     * М
     */
    RU_EM = 'RU_EM',
    /**
     * /
     */
    RU_SLSH = 'RU_SLSH',
    /**
     * Р
     */
    RU_ER = 'RU_ER',
    /**
     * Э
     */
    RU_E = 'RU_E',
    /**
     * О
     */
    RU_O = 'RU_O',
    /**
     * *
     */
    RU_ASTR = 'RU_ASTR',
    /**
     * У
     */
    RU_U = 'RU_U',
    /**
     * Ъ
     */
    RU_HARD = 'RU_HARD',
    /**
     * Л
     */
    RU_EL = 'RU_EL',
    /**
     * ;
     */
    RU_SCLN = 'RU_SCLN',
    /**
     * =
     */
    RU_EQL = 'RU_EQL',
    /**
     * Ю
     */
    RU_YU = 'RU_YU',
    /**
     * Ш
     */
    RU_SHA = 'RU_SHA',
    /**
     * С
     */
    RU_ES = 'RU_ES',
    /**
     * Ы
     */
    RU_YERU = 'RU_YERU',
    /**
     * :
     */
    RU_COLN = 'RU_COLN',
    /**
     * Я
     */
    RU_YA = 'RU_YA',
    /**
     * +
     */
    RU_PLUS = 'RU_PLUS',
    /**
     * Д
     */
    RU_DE = 'RU_DE',
    /**
     * Б
     */
    RU_BE = 'RU_BE',
    /**
     * В
     */
    RU_VE = 'RU_VE',
    /**
     * ?
     */
    RU_QUES = 'RU_QUES',
    /**
     * Й
     */
    RU_SHTI = 'RU_SHTI',
    /**
     * Ж
     */
    RU_ZHE = 'RU_ZHE',
    /**
     * !
     */
    RU_EXLM = 'RU_EXLM',
    /**
     * _
     */
    RU_UNDS = 'RU_UNDS',
    /**
     * З
     */
    RU_ZE = 'RU_ZE',
    /**
     * Н
     */
    RU_EN = 'RU_EN',
    /**
     * Е
     */
    RU_IE = 'RU_IE',
    /**
     * SCMD- Tapping results in the keystroke specified in <command> - holding acts as Shift + Win/Cmd
     */
    SCMD_T = 'SCMD_T',
    /**
     * Left Alt- Tapping results in the keystroke specified in <command> - holding acts as Left Alt
     */
    LALT_T = 'LALT_T',
    /**
     * Ctrl+Alt- Tapping results in the keystroke specified in <command> - holding acts as Left Ctrl + Alt
     */
    LCA_T = 'LCA_T',
    /**
     * Ctrl+Shift- Tapping results in the keystroke specified in <command> - holding acts as Left Ctrl + Shift
     */
    C_S_T = 'C_S_T',
    /**
     * Left Ctrl- Tapping results in the keystroke specified in <command> - holding acts as Left Control
     */
    LCTL_T = 'LCTL_T',
    /**
     * Hyper- Holding acts as Hyper (Alt+Shift+Ctrl+Cmd). In Windows, this is the Office key.
     */
    ALL_T = 'ALL_T',
    /**
     * Left Cmd/Win- Tapping results in the keystroke specified in <command> - holding acts as Left Win/Cmd
     */
    LGUI_T = 'LGUI_T',
    /**
     * Right Cmd/Win- Tapping results in the keystroke specified in <command> - holding acts as Right Win/Cmd
     */
    RGUI_T = 'RGUI_T',
    /**
     * Right Ctrl- Tapping results in the keystroke specified in <command> - holding acts as Right Control
     */
    RCTL_T = 'RCTL_T',
    /**
     * Right Alt- Tapping results in the keystroke specified in <command> - holding acts as Right Alt (AltGr)
     */
    RALT_T = 'RALT_T',
    /**
     * Õ
     */
    EE_OTIL = 'EE_OTIL',
    /**
     * /
     */
    EE_SLSH = 'EE_SLSH',
    /**
     * Shift+Alt- Tapping results in the keystroke specified in <command> - holding acts as Left Shift + Alt
     */
    LSA_T = 'LSA_T',
    /**
     * Left Shift- Tapping results in the keystroke specified in <command> - holding acts as Left Shift
     */
    LSFT_T = 'LSFT_T',
    /**
     * Shift+Alt (Right)- Tapping results in the keystroke specified in <command> - holding acts as Right Shift + Right Alt
     */
    RSA_T = 'RSA_T',
    /**
     * Right Shift- Tapping results in the keystroke specified in <command> - holding acts as Right Shift
     */
    RSFT_T = 'RSFT_T',
    /**
     * Meh- Holding acts as Meh (Alt+Shift+Ctrl)
     */
    MEH_T = 'MEH_T',
    /**
     * Rewind
     */
    KC_MEDIA_REWIND = 'KC_MEDIA_REWIND',
    /**
     * Volume down
     */
    KC_AUDIO_VOL_DOWN = 'KC_AUDIO_VOL_DOWN',
    /**
     * Next
     */
    KC_MEDIA_NEXT_TRACK = 'KC_MEDIA_NEXT_TRACK',
    /**
     * WWW Home
     */
    KC_WWW_HOME = 'KC_WWW_HOME',
    /**
     * Favorites
     */
    KC_WWW_FAVORITES = 'KC_WWW_FAVORITES',
    /**
     * Refresh
     */
    KC_WWW_REFRESH = 'KC_WWW_REFRESH',
    /**
     * Mute
     */
    KC_AUDIO_MUTE = 'KC_AUDIO_MUTE',
    /**
     * WWW Back- Only available on Windows.
     */
    KC_WWW_BACK = 'KC_WWW_BACK',
    /**
     * File manager
     */
    KC_MY_COMPUTER = 'KC_MY_COMPUTER',
    /**
     * Play
     */
    KC_MEDIA_PLAY_PAUSE = 'KC_MEDIA_PLAY_PAUSE',
    /**
     * Search
     */
    KC_WWW_SEARCH = 'KC_WWW_SEARCH',
    /**
     * Stop
     */
    KC_MEDIA_STOP = 'KC_MEDIA_STOP',
    /**
     * Mail
     */
    KC_MAIL = 'KC_MAIL',
    /**
     * Fast forward
     */
    KC_MEDIA_FAST_FORWARD = 'KC_MEDIA_FAST_FORWARD',
    /**
     * Volume up
     */
    KC_AUDIO_VOL_UP = 'KC_AUDIO_VOL_UP',
    /**
     * Calc
     */
    KC_CALCULATOR = 'KC_CALCULATOR',
    /**
     * Prev
     */
    KC_MEDIA_PREV_TRACK = 'KC_MEDIA_PREV_TRACK',
    /**
     * Eject
     */
    KC_MEDIA_EJECT = 'KC_MEDIA_EJECT',
    /**
     * WWW Fwd- Only available on Windows.
     */
    KC_WWW_FORWARD = 'KC_WWW_FORWARD',
    /**
     * T
     */
    EE_T = 'EE_T',
    /**
     * M
     */
    EE_M = 'EE_M',
    /**
     * €
     */
    EE_EURO = 'EE_EURO',
    /**
     * D
     */
    EE_D = 'EE_D',
    /**
     * Ä
     */
    EE_ADIA = 'EE_ADIA',
    /**
     * 6
     */
    EE_6 = 'EE_6',
    /**
     * U
     */
    EE_U = 'EE_U',
    /**
     * 3
     */
    EE_3 = 'EE_3',
    /**
     * 7
     */
    EE_7 = 'EE_7',
    /**
     * ½
     */
    EE_HALF = 'EE_HALF',
    /**
     * Ü
     */
    EE_UDIA = 'EE_UDIA',
    /**
     * ]
     */
    EE_RBRC = 'EE_RBRC',
    /**
     * ;
     */
    EE_SCLN = 'EE_SCLN',
    /**
     * ^ (dead)
     */
    EE_CIRC = 'EE_CIRC',
    /**
     * _
     */
    EE_UNDS = 'EE_UNDS',
    /**
     * 1
     */
    EE_1 = 'EE_1',
    /**
     * H
     */
    EE_H = 'EE_H',
    /**
     * V
     */
    EE_V = 'EE_V',
    /**
     * I
     */
    EE_I = 'EE_I',
    /**
     * G
     */
    EE_G = 'EE_G',
    /**
     * -
     */
    EE_MINS = 'EE_MINS',
    /**
     * Z
     */
    EE_Z = 'EE_Z',
    /**
     * <
     */
    EE_LABK = 'EE_LABK',
    /**
     * .
     */
    EE_DOT = 'EE_DOT',
    /**
     * Ö
     */
    EE_ODIA = 'EE_ODIA',
    /**
     * (
     */
    EE_LPRN = 'EE_LPRN',
    /**
     * !
     */
    EE_EXLM = 'EE_EXLM',
    /**
     * %
     */
    EE_PERC = 'EE_PERC',
    /**
     * @
     */
    EE_AT = 'EE_AT',
    /**
     * O
     */
    EE_O = 'EE_O',
    /**
     * '
     */
    EE_QUOT = 'EE_QUOT',
    /**
     * }
     */
    EE_RCBR = 'EE_RCBR',
    /**
     * 0
     */
    EE_0 = 'EE_0',
    /**
     * Y
     */
    EE_Y = 'EE_Y',
    /**
     * R
     */
    EE_R = 'EE_R',
    /**
     * ˇ (dead)
     */
    EE_CARN = 'EE_CARN',
    /**
     * 9
     */
    EE_9 = 'EE_9',
    /**
     * ¤
     */
    EE_CURR = 'EE_CURR',
    /**
     * X
     */
    EE_X = 'EE_X',
    /**
     * |
     */
    EE_PIPE = 'EE_PIPE',
    /**
     * ,
     */
    EE_COMM = 'EE_COMM',
    /**
     * [
     */
    EE_LBRC = 'EE_LBRC',
    /**
     * F
     */
    EE_F = 'EE_F',
    /**
     * {
     */
    EE_LCBR = 'EE_LCBR',
    /**
     * 5
     */
    EE_5 = 'EE_5',
    /**
     * §
     */
    EE_SECT = 'EE_SECT',
    /**
     * ` (dead)
     */
    EE_GRV = 'EE_GRV',
    /**
     * £
     */
    EE_PND = 'EE_PND',
    /**
     * B
     */
    EE_B = 'EE_B',
    /**
     * ž
     */
    EE_ZCAR = 'EE_ZCAR',
    /**
     * J
     */
    EE_J = 'EE_J',
    /**
     * L
     */
    EE_L = 'EE_L',
    /**
     * :
     */
    EE_COLN = 'EE_COLN',
    /**
     * S
     */
    EE_S = 'EE_S',
    /**
     * \
     */
    EE_BSLS = 'EE_BSLS',
    /**
     * ´ (dead)
     */
    EE_ACUT = 'EE_ACUT',
    /**
     * >
     */
    EE_RABK = 'EE_RABK',
    /**
     * N
     */
    EE_N = 'EE_N',
    /**
     * "
     */
    EE_DQUO = 'EE_DQUO',
    /**
     * +
     */
    EE_PLUS = 'EE_PLUS',
    /**
     * K
     */
    EE_K = 'EE_K',
    /**
     * W
     */
    EE_W = 'EE_W',
    /**
     * A
     */
    EE_A = 'EE_A',
    /**
     * )
     */
    EE_RPRN = 'EE_RPRN',
    /**
     * ~ (dead)
     */
    EE_TILD = 'EE_TILD',
    /**
     * 8
     */
    EE_8 = 'EE_8',
    /**
     * $
     */
    EE_DLR = 'EE_DLR',
    /**
     * &
     */
    EE_AMPR = 'EE_AMPR',
    /**
     * E
     */
    EE_E = 'EE_E',
    /**
     * Q
     */
    EE_Q = 'EE_Q',
    /**
     * *
     */
    EE_ASTR = 'EE_ASTR',
    /**
     * š
     */
    EE_SCAR = 'EE_SCAR',
    /**
     * P
     */
    EE_P = 'EE_P',
    /**
     * #
     */
    EE_HASH = 'EE_HASH',
    /**
     * =
     */
    EE_EQL = 'EE_EQL',
    /**
     * 2
     */
    EE_2 = 'EE_2',
    /**
     * ?
     */
    EE_QUES = 'EE_QUES',
    /**
     * C
     */
    EE_C = 'EE_C',
    /**
     * |
     */
    DK_PIPE = 'DK_PIPE',
    /**
     * €
     */
    DK_EURO = 'DK_EURO',
    /**
     * =
     */
    DK_EQL = 'DK_EQL',
    /**
     * Å
     */
    DK_ARNG = 'DK_ARNG',
    /**
     * ^
     */
    DK_CIRC = 'DK_CIRC',
    /**
     * ,
     */
    DK_COMM = 'DK_COMM',
    /**
     * *
     */
    DK_ASTR = 'DK_ASTR',
    /**
     * `
     */
    DK_GRV = 'DK_GRV',
    /**
     * >
     */
    DK_RABK = 'DK_RABK',
    /**
     * #
     */
    DK_HASH = 'DK_HASH',
    /**
     * Shift )
     */
    DK_RSPC = 'DK_RSPC',
    /**
     * $
     */
    DK_DLR = 'DK_DLR',
    /**
     * ½
     */
    DK_HALF = 'DK_HALF',
    /**
     * ~
     */
    DK_TILD = 'DK_TILD',
    /**
     * !
     */
    DK_EXLM = 'DK_EXLM',
    /**
     * ;
     */
    DK_SCLN = 'DK_SCLN',
    /**
     * Shift (
     */
    DK_LSPO = 'DK_LSPO',
    /**
     * @
     */
    DK_AT = 'DK_AT',
    /**
     * .
     */
    DK_DOT = 'DK_DOT',
    /**
     * Æ
     */
    DK_AE = 'DK_AE',
    /**
     * <
     */
    DK_LABK = 'DK_LABK',
    /**
     * ¨
     */
    DK_DIAE = 'DK_DIAE',
    /**
     * §
     */
    DK_SECT = 'DK_SECT',
    /**
     * \
     */
    DK_BSLS = 'DK_BSLS',
    /**
     * -
     */
    DK_MINS = 'DK_MINS',
    /**
     * /
     */
    DK_SLSH = 'DK_SLSH',
    /**
     * Ø
     */
    DK_OSTR = 'DK_OSTR',
    /**
     * )
     */
    DK_RPRN = 'DK_RPRN',
    /**
     * {
     */
    DK_LCBR = 'DK_LCBR',
    /**
     * ?
     */
    DK_QUES = 'DK_QUES',
    /**
     * %
     */
    DK_PERC = 'DK_PERC',
    /**
     * ¤
     */
    DK_CURR = 'DK_CURR',
    /**
     * [
     */
    DK_LBRC = 'DK_LBRC',
    /**
     * '
     */
    DK_QUOT = 'DK_QUOT',
    /**
     * +
     */
    DK_PLUS = 'DK_PLUS',
    /**
     * _
     */
    DK_UNDS = 'DK_UNDS',
    /**
     * (
     */
    DK_LPRN = 'DK_LPRN',
    /**
     * £
     */
    DK_PND = 'DK_PND',
    /**
     * &
     */
    DK_AMPR = 'DK_AMPR',
    /**
     * }
     */
    DK_RCBR = 'DK_RCBR',
    /**
     * :
     */
    DK_COLN = 'DK_COLN',
    /**
     * "
     */
    DK_DQUO = 'DK_DQUO',
    /**
     * ]
     */
    DK_RBRC = 'DK_RBRC',
    /**
     * ´
     */
    DK_ACUT = 'DK_ACUT',
    /**
     * A
     */
    KC_A = 'KC_A',
    /**
     * F
     */
    KC_F = 'KC_F',
    /**
     * M
     */
    KC_M = 'KC_M',
    /**
     * E
     */
    KC_E = 'KC_E',
    /**
     * B
     */
    KC_B = 'KC_B',
    /**
     * V
     */
    KC_V = 'KC_V',
    /**
     * I
     */
    KC_I = 'KC_I',
    /**
     * D
     */
    KC_D = 'KC_D',
    /**
     * W
     */
    KC_W = 'KC_W',
    /**
     * G
     */
    KC_G = 'KC_G',
    /**
     * P
     */
    KC_P = 'KC_P',
    /**
     * J
     */
    KC_J = 'KC_J',
    /**
     * L
     */
    KC_L = 'KC_L',
    /**
     * Y
     */
    KC_Y = 'KC_Y',
    /**
     * X
     */
    KC_X = 'KC_X',
    /**
     * Z
     */
    KC_Z = 'KC_Z',
    /**
     * S
     */
    KC_S = 'KC_S',
    /**
     * C
     */
    KC_C = 'KC_C',
    /**
     * R
     */
    KC_R = 'KC_R',
    /**
     * Q
     */
    KC_Q = 'KC_Q',
    /**
     * H
     */
    KC_H = 'KC_H',
    /**
     * O
     */
    KC_O = 'KC_O',
    /**
     * U
     */
    KC_U = 'KC_U',
    /**
     * N
     */
    KC_N = 'KC_N',
    /**
     * T
     */
    KC_T = 'KC_T',
    /**
     * K
     */
    KC_K = 'KC_K',
    /**
     * Left click
     */
    KC_MS_BTN1 = 'KC_MS_BTN1',
    /**
     * Move down
     */
    KC_MS_DOWN = 'KC_MS_DOWN',
    /**
     * Wheel Down
     */
    KC_MS_WH_DOWN = 'KC_MS_WH_DOWN',
    /**
     * Right click
     */
    KC_MS_BTN2 = 'KC_MS_BTN2',
    /**
     * Wheel Right
     */
    KC_MS_WH_RIGHT = 'KC_MS_WH_RIGHT',
    /**
     * Button 5
     */
    KC_MS_BTN5 = 'KC_MS_BTN5',
    /**
     * Move left
     */
    KC_MS_LEFT = 'KC_MS_LEFT',
    /**
     * Acceleration 0
     */
    KC_MS_ACCEL0 = 'KC_MS_ACCEL0',
    /**
     * Wheel Up
     */
    KC_MS_WH_UP = 'KC_MS_WH_UP',
    /**
     * Acceleration 2
     */
    KC_MS_ACCEL2 = 'KC_MS_ACCEL2',
    /**
     * Acceleration 1
     */
    KC_MS_ACCEL1 = 'KC_MS_ACCEL1',
    /**
     * Middle click
     */
    KC_MS_BTN3 = 'KC_MS_BTN3',
    /**
     * Move right
     */
    KC_MS_RIGHT = 'KC_MS_RIGHT',
    /**
     * Button 4
     */
    KC_MS_BTN4 = 'KC_MS_BTN4',
    /**
     * Wheel Left
     */
    KC_MS_WH_LEFT = 'KC_MS_WH_LEFT',
    /**
     * Move up
     */
    KC_MS_UP = 'KC_MS_UP',
    /**
     * D
     */
    LT_D = 'LT_D',
    /**
     * X
     */
    LT_X = 'LT_X',
    /**
     * *
     */
    LT_ASTR = 'LT_ASTR',
    /**
     * 8
     */
    LT_8 = 'LT_8',
    /**
     * !
     */
    LT_EXLM = 'LT_EXLM',
    /**
     * )
     */
    LT_RPRN = 'LT_RPRN',
    /**
     * /
     */
    LT_SLSH = 'LT_SLSH',
    /**
     * Ų
     */
    LT_UOGO = 'LT_UOGO',
    /**
     * `
     */
    LT_GRV = 'LT_GRV',
    /**
     * 0
     */
    LT_0 = 'LT_0',
    /**
     * [
     */
    LT_LBRC = 'LT_LBRC',
    /**
     * ;
     */
    LT_SCLN = 'LT_SCLN',
    /**
     * <
     */
    LT_LABK = 'LT_LABK',
    /**
     * V
     */
    LT_V = 'LT_V',
    /**
     * I
     */
    LT_I = 'LT_I',
    /**
     * W
     */
    LT_W = 'LT_W',
    /**
     * “
     */
    LT_LDQU = 'LT_LDQU',
    /**
     * #
     */
    LT_HASH = 'LT_HASH',
    /**
     * G
     */
    LT_G = 'LT_G',
    /**
     * 9
     */
    LT_9 = 'LT_9',
    /**
     * A
     */
    LT_A = 'LT_A',
    /**
     * F
     */
    LT_F = 'LT_F',
    /**
     * E
     */
    LT_E = 'LT_E',
    /**
     * ^
     */
    LT_CIRC = 'LT_CIRC',
    /**
     * +
     */
    LT_PLUS = 'LT_PLUS',
    /**
     * Ž
     */
    LT_ZCAR = 'LT_ZCAR',
    /**
     * L
     */
    LT_L = 'LT_L',
    /**
     * Y
     */
    LT_Y = 'LT_Y',
    /**
     * :
     */
    LT_COLN = 'LT_COLN',
    /**
     * Z
     */
    LT_Z = 'LT_Z',
    /**
     * _
     */
    LT_UNDS = 'LT_UNDS',
    /**
     * Ą
     */
    LT_AOGO = 'LT_AOGO',
    /**
     * 6
     */
    LT_6 = 'LT_6',
    /**
     * M
     */
    LT_M = 'LT_M',
    /**
     * Ę
     */
    LT_EOGO = 'LT_EOGO',
    /**
     * N
     */
    LT_N = 'LT_N',
    /**
     * –
     */
    LT_NDSH = 'LT_NDSH',
    /**
     * "
     */
    LT_DQUO = 'LT_DQUO',
    /**
     * B
     */
    LT_B = 'LT_B',
    /**
     * 7
     */
    LT_7 = 'LT_7',
    /**
     * '
     */
    LT_QUOT = 'LT_QUOT',
    /**
     * O
     */
    LT_O = 'LT_O',
    /**
     * ,
     */
    LT_COMM = 'LT_COMM',
    /**
     * @
     */
    LT_AT = 'LT_AT',
    /**
     * (backslash)
     */
    LT_BSLS = 'LT_BSLS',
    /**
     * (
     */
    LT_LPRN = 'LT_LPRN',
    /**
     * P
     */
    LT_P = 'LT_P',
    /**
     * ~
     */
    LT_TILD = 'LT_TILD',
    /**
     * K
     */
    LT_K = 'LT_K',
    /**
     * U
     */
    LT_U = 'LT_U',
    /**
     * $
     */
    LT_DLR = 'LT_DLR',
    /**
     * &
     */
    LT_AMPR = 'LT_AMPR',
    /**
     * >
     */
    LT_RABK = 'LT_RABK',
    /**
     * €
     */
    LT_EURO = 'LT_EURO',
    /**
     * ?
     */
    LT_QUES = 'LT_QUES',
    /**
     * 3
     */
    LT_3 = 'LT_3',
    /**
     * {
     */
    LT_LCBR = 'LT_LCBR',
    /**
     * Š
     */
    LT_SCAR = 'LT_SCAR',
    /**
     * =
     */
    LT_EQL = 'LT_EQL',
    /**
     * 1
     */
    LT_1 = 'LT_1',
    /**
     * §
     */
    LT_SECT = 'LT_SECT',
    /**
     * R
     */
    LT_R = 'LT_R',
    /**
     * Ū
     */
    LT_UMAC = 'LT_UMAC',
    /**
     * ´
     */
    LT_ACUT = 'LT_ACUT',
    /**
     * 5
     */
    LT_5 = 'LT_5',
    /**
     * J
     */
    LT_J = 'LT_J',
    /**
     * ]
     */
    LT_RBRC = 'LT_RBRC',
    /**
     * |
     */
    LT_PIPE = 'LT_PIPE',
    /**
     * 4
     */
    LT_4 = 'LT_4',
    /**
     * Q
     */
    LT_Q = 'LT_Q',
    /**
     * C
     */
    LT_C = 'LT_C',
    /**
     * S
     */
    LT_S = 'LT_S',
    /**
     * 2
     */
    LT_2 = 'LT_2',
    /**
     * H
     */
    LT_H = 'LT_H',
    /**
     * .
     */
    LT_DOT = 'LT_DOT',
    /**
     * }
     */
    LT_RCBR = 'LT_RCBR',
    /**
     * T
     */
    LT_T = 'LT_T',
    /**
     * Į
     */
    LT_IOGO = 'LT_IOGO',
    /**
     * %
     */
    LT_PERC = 'LT_PERC',
    /**
     * „
     */
    LT_DLQU = 'LT_DLQU',
    /**
     * Ė
     */
    LT_EDOT = 'LT_EDOT',
    /**
     * -
     */
    LT_MINS = 'LT_MINS',
    /**
     * Č
     */
    LT_CCAR = 'LT_CCAR',
    /**
     * PgUp
     */
    KC_PGUP = 'KC_PGUP',
    /**
     * ▲
     */
    KC_UP = 'KC_UP',
    /**
     * Scroll lock
     */
    KC_SCROLLLOCK = 'KC_SCROLLLOCK',
    /**
     * Home
     */
    KC_HOME = 'KC_HOME',
    /**
     * Ins
     */
    KC_INSERT = 'KC_INSERT',
    /**
     * PgDn
     */
    KC_PGDOWN = 'KC_PGDOWN',
    /**
     * ▼
     */
    KC_DOWN = 'KC_DOWN',
    /**
     * SysRq- Also known as Print Screen. Alt+SysRq would give you the Linux Magic SysRq combo on one key.
     */
    KC_PSCREEN = 'KC_PSCREEN',
    /**
     * Application
     */
    KC_APPLICATION = 'KC_APPLICATION',
    /**
     * ◀
     */
    KC_LEFT = 'KC_LEFT',
    /**
     * ▶
     */
    KC_RIGHT = 'KC_RIGHT',
    /**
     * End
     */
    KC_END = 'KC_END',
    /**
     * Del
     */
    KC_DELETE = 'KC_DELETE',
    /**
     * $
     */
    NRW_DLR = 'NRW_DLR',
    /**
     * /
     */
    NRW_SLSH = 'NRW_SLSH',
    /**
     * ´
     */
    NRW_ACUT = 'NRW_ACUT',
    /**
     * @
     */
    NRW_AT = 'NRW_AT',
    /**
     * #
     */
    NRW_HASH = 'NRW_HASH',
    /**
     * Shift )
     */
    NRW_RSPC = 'NRW_RSPC',
    /**
     * +
     */
    NRW_PLUS = 'NRW_PLUS',
    /**
     * Æ
     */
    NRW_AE = 'NRW_AE',
    /**
     * Ø
     */
    NRW_OSTR = 'NRW_OSTR',
    /**
     * -
     */
    NRW_MINS = 'NRW_MINS',
    /**
     * '
     */
    NRW_APOS_MAC = 'NRW_APOS_MAC',
    /**
     * §
     */
    NRW_SECT = 'NRW_SECT',
    /**
     * €
     */
    NRW_EURO = 'NRW_EURO',
    /**
     * ~
     */
    NRW_TILD = 'NRW_TILD',
    /**
     * !
     */
    NRW_EXLM = 'NRW_EXLM',
    /**
     * }
     */
    NRW_RCBR = 'NRW_RCBR',
    /**
     * Shift (
     */
    NRW_LSPO = 'NRW_LSPO',
    /**
     * ¤
     */
    NRW_CURR = 'NRW_CURR',
    /**
     * }
     */
    NRW_RCBR_MAC = 'NRW_RCBR_MAC',
    /**
     * =
     */
    NRW_EQL = 'NRW_EQL',
    /**
     * (
     */
    NRW_LPRN = 'NRW_LPRN',
    /**
     * "
     */
    NRW_DQUO = 'NRW_DQUO',
    /**
     * ?
     */
    NRW_QUES = 'NRW_QUES',
    /**
     * ^
     */
    NRW_CIRC = 'NRW_CIRC',
    /**
     * <
     */
    NRW_LABK = 'NRW_LABK',
    /**
     * *
     */
    NRW_ASTR = 'NRW_ASTR',
    /**
     * )
     */
    NRW_RPRN = 'NRW_RPRN',
    /**
     * {
     */
    NRW_LCBR_MAC = 'NRW_LCBR_MAC',
    /**
     * <
     */
    NRW_LESS_MAC = 'NRW_LESS_MAC',
    /**
     * £
     */
    NRW_PND = 'NRW_PND',
    /**
     * ;
     */
    NRW_SCLN = 'NRW_SCLN',
    /**
     * >
     */
    NRW_GRTR_MAC = 'NRW_GRTR_MAC',
    /**
     * &
     */
    NRW_AMPR = 'NRW_AMPR',
    /**
     * _
     */
    NRW_UNDS = 'NRW_UNDS',
    /**
     * |
     */
    NRW_PIPE = 'NRW_PIPE',
    /**
     * ,
     */
    NRW_COMM = 'NRW_COMM',
    /**
     * ´
     */
    NRW_ACUT_MAC = 'NRW_ACUT_MAC',
    /**
     * %
     */
    NRW_PERC = 'NRW_PERC',
    /**
     * `
     */
    NRW_GRV_MAC = 'NRW_GRV_MAC',
    /**
     * Å
     */
    NRW_ARNG = 'NRW_ARNG',
    /**
     * ¨
     */
    NRW_DIAE = 'NRW_DIAE',
    /**
     * //
     */
    NRW_BSLS_MAC = 'NRW_BSLS_MAC',
    /**
     * $
     */
    NRW_DLR_MAC = 'NRW_DLR_MAC',
    /**
     * `
     */
    NRW_GRV = 'NRW_GRV',
    /**
     * .
     */
    NRW_DOT = 'NRW_DOT',
    /**
     * >
     */
    NRW_RABK = 'NRW_RABK',
    /**
     * [
     */
    NRW_LBRC = 'NRW_LBRC',
    /**
     * @
     */
    NRW_AT_MAC = 'NRW_AT_MAC',
    /**
     * :
     */
    NRW_COLN = 'NRW_COLN',
    /**
     * '
     */
    NRW_QUOT = 'NRW_QUOT',
    /**
     * \
     */
    NRW_BSLS = 'NRW_BSLS',
    /**
     * {
     */
    NRW_LCBR = 'NRW_LCBR',
    /**
     * |
     */
    NRW_PIPE_MAC = 'NRW_PIPE_MAC',
    /**
     * ]
     */
    NRW_RBRC = 'NRW_RBRC',
    /**
     * !
     */
    KR_EXLM = 'KR_EXLM',
    /**
     * #
     */
    KR_HASH = 'KR_HASH',
    /**
     * $
     */
    KR_DLR = 'KR_DLR',
    /**
     * <
     */
    KR_LABK = 'KR_LABK',
    /**
     * )
     */
    KR_RPRN = 'KR_RPRN',
    /**
     * %
     */
    KR_PERC = 'KR_PERC',
    /**
     * {
     */
    KR_LCBR = 'KR_LCBR',
    /**
     * ^
     */
    KR_CIRC = 'KR_CIRC',
    /**
     * _
     */
    KR_UNDS = 'KR_UNDS',
    /**
     * *
     */
    KR_ASTR = 'KR_ASTR',
    /**
     * Han ↔ Yeong (한 ↔ 영)
     */
    KR_HAEN = 'KR_HAEN',
    /**
     * ?
     */
    KR_QUES = 'KR_QUES',
    /**
     * :
     */
    KR_COLN = 'KR_COLN',
    /**
     * @
     */
    KR_AT = 'KR_AT',
    /**
     * |
     */
    KR_PIPE = 'KR_PIPE',
    /**
     * "
     */
    KR_DQUO = 'KR_DQUO',
    /**
     * >
     */
    KR_RABK = 'KR_RABK',
    /**
     * (
     */
    KR_LPRN = 'KR_LPRN',
    /**
     * Hanja (한자)
     */
    KR_HANJ = 'KR_HANJ',
    /**
     * }
     */
    KR_RCBR = 'KR_RCBR',
    /**
     * ~
     */
    KR_TILD = 'KR_TILD',
    /**
     * &
     */
    KR_AMPR = 'KR_AMPR',
    /**
     * +
     */
    KR_PLUS = 'KR_PLUS',
    /**
     * ₩
     */
    KR_WON = 'KR_WON',
    /**
     * -T
     */
    STN_TR = 'STN_TR',
    /**
     * -D
     */
    STN_DR = 'STN_DR',
    /**
     * #5
     */
    STN_N5 = 'STN_N5',
    /**
     * U
     */
    STN_U = 'STN_U',
    /**
     * -L
     */
    STN_LR = 'STN_LR',
    /**
     * * (lower-left)
     */
    STN_ST2 = 'STN_ST2',
    /**
     * #B
     */
    STN_NB = 'STN_NB',
    /**
     * T-
     */
    STN_TL = 'STN_TL',
    /**
     * E
     */
    STN_E = 'STN_E',
    /**
     * R-
     */
    STN_RL = 'STN_RL',
    /**
     * H-
     */
    STN_HL = 'STN_HL',
    /**
     * #6
     */
    STN_N6 = 'STN_N6',
    /**
     * #4
     */
    STN_N4 = 'STN_N4',
    /**
     * #8
     */
    STN_N8 = 'STN_N8',
    /**
     * -P
     */
    STN_PR = 'STN_PR',
    /**
     * P-
     */
    STN_PL = 'STN_PL',
    /**
     * * (lower-right)
     */
    STN_ST4 = 'STN_ST4',
    /**
     * Pwr
     */
    STN_PWR = 'STN_PWR',
    /**
     * #2
     */
    STN_N2 = 'STN_N2',
    /**
     * Res1
     */
    STN_RES1 = 'STN_RES1',
    /**
     * Gemini
     */
    QK_STENO_GEMINI = 'QK_STENO_GEMINI',
    /**
     * #1
     */
    STN_N1 = 'STN_N1',
    /**
     * K-
     */
    STN_KL = 'STN_KL',
    /**
     * Fn
     */
    STN_FN = 'STN_FN',
    /**
     * O
     */
    STN_O = 'STN_O',
    /**
     * #A
     */
    STN_NA = 'STN_NA',
    /**
     * S- (lower)
     */
    STN_S2 = 'STN_S2',
    /**
     * W-
     */
    STN_WL = 'STN_WL',
    /**
     * Bolt
     */
    QK_STENO_BOLT = 'QK_STENO_BOLT',
    /**
     * #7
     */
    STN_N7 = 'STN_N7',
    /**
     * Res2
     */
    STN_RES2 = 'STN_RES2',
    /**
     * -F
     */
    STN_FR = 'STN_FR',
    /**
     * -G
     */
    STN_GR = 'STN_GR',
    /**
     * #9
     */
    STN_N9 = 'STN_N9',
    /**
     * * (upper-right)
     */
    STN_ST3 = 'STN_ST3',
    /**
     * #C
     */
    STN_NC = 'STN_NC',
    /**
     * A
     */
    STN_A = 'STN_A',
    /**
     * #3
     */
    STN_N3 = 'STN_N3',
    /**
     * S- (upper)
     */
    STN_S1 = 'STN_S1',
    /**
     * -R
     */
    STN_RR = 'STN_RR',
    /**
     * -Z
     */
    STN_ZR = 'STN_ZR',
    /**
     * * (upper-left)
     */
    STN_ST1 = 'STN_ST1',
    /**
     * -S
     */
    STN_SR = 'STN_SR',
    /**
     * -B
     */
    STN_BR = 'STN_BR',
    /**
     * null
     */
    KC_LALT = 'KC_LALT',
    /**
     * null- Right Alt, also known as AltGr.
     */
    MOD_RALT = 'MOD_RALT',
    /**
     * ⇧
     */
    KC_RSHIFT = 'KC_RSHIFT',
    /**
     * null
     */
    MOD_RGUI = 'MOD_RGUI',
    /**
     * null
     */
    KC_LGUI = 'KC_LGUI',
    /**
     * ⇧
     */
    MOD_LSFT = 'MOD_LSFT',
    /**
     * ⇧
     */
    KC_LSHIFT = 'KC_LSHIFT',
    /**
     * null- Also known as AltGr.
     */
    KC_RALT = 'KC_RALT',
    /**
     * Right Ctrl
     */
    MOD_RCTL = 'MOD_RCTL',
    /**
     * Hyper
     */
    MOD_HYPR = 'MOD_HYPR',
    /**
     * Left Ctrl
     */
    MOD_LCTL = 'MOD_LCTL',
    /**
     * null
     */
    KC_RGUI = 'KC_RGUI',
    /**
     * Meh
     */
    MOD_MEH = 'MOD_MEH',
    /**
     * null
     */
    MOD_LGUI = 'MOD_LGUI',
    /**
     * Left Ctrl
     */
    KC_LCTRL = 'KC_LCTRL',
    /**
     * null
     */
    MOD_LALT = 'MOD_LALT',
    /**
     * ⇧
     */
    MOD_RSFT = 'MOD_RSFT',
    /**
     * Right Ctrl
     */
    KC_RCTRL = 'KC_RCTRL',
    /**
     * OSM- One-shot modifier: Turns a modifier on, but only for one keypress. Once you press a key in the modifier is then deactivated. You can keep the modifier active by holding the key down.
     */
    OSM = 'OSM',
    /**
     * =
     */
    RO_EQL = 'RO_EQL',
    /**
     * ©
     */
    RO_COPY = 'RO_COPY',
    /**
     * /
     */
    RO_SLSH = 'RO_SLSH',
    /**
     * 8
     */
    RO_8 = 'RO_8',
    /**
     * A
     */
    RO_A = 'RO_A',
    /**
     * K
     */
    RO_K = 'RO_K',
    /**
     * §
     */
    RO_SECT = 'RO_SECT',
    /**
     * [
     */
    RO_LBRC = 'RO_LBRC',
    /**
     * |
     */
    RO_PIPE = 'RO_PIPE',
    /**
     * F
     */
    RO_F = 'RO_F',
    /**
     * ¨ (dead)
     */
    RO_DIAE = 'RO_DIAE',
    /**
     * #
     */
    RO_HASH = 'RO_HASH',
    /**
     * ”
     */
    RO_RDQU = 'RO_RDQU',
    /**
     * ,
     */
    RO_COMM = 'RO_COMM',
    /**
     * B
     */
    RO_B = 'RO_B',
    /**
     * 6
     */
    RO_6 = 'RO_6',
    /**
     * ° (dead)
     */
    RO_RNGA = 'RO_RNGA',
    /**
     * Q
     */
    RO_Q = 'RO_Q',
    /**
     * @
     */
    RO_AT = 'RO_AT',
    /**
     * ` (dead)
     */
    RO_DGRV = 'RO_DGRV',
    /**
     * $
     */
    RO_DLR = 'RO_DLR',
    /**
     * G
     */
    RO_G = 'RO_G',
    /**
     * O
     */
    RO_O = 'RO_O',
    /**
     * ^
     */
    RO_CIRC = 'RO_CIRC',
    /**
     * "
     */
    RO_DQUO = 'RO_DQUO',
    /**
     * N
     */
    RO_N = 'RO_N',
    /**
     * R
     */
    RO_R = 'RO_R',
    /**
     * 4
     */
    RO_4 = 'RO_4',
    /**
     * ˛ (dead)
     */
    RO_OGON = 'RO_OGON',
    /**
     * ˙ (dead)
     */
    RO_DOTA = 'RO_DOTA',
    /**
     * )
     */
    RO_RPRN = 'RO_RPRN',
    /**
     * Z
     */
    RO_Z = 'RO_Z',
    /**
     * ˇ (dead)
     */
    RO_CARN = 'RO_CARN',
    /**
     * <
     */
    RO_LABK = 'RO_LABK',
    /**
     * }
     */
    RO_RCBR = 'RO_RCBR',
    /**
     * S
     */
    RO_S = 'RO_S',
    /**
     * Â
     */
    RO_ACIR = 'RO_ACIR',
    /**
     * ¸ (dead)
     */
    RO_CEDL = 'RO_CEDL',
    /**
     * `
     */
    RO_GRV = 'RO_GRV',
    /**
     * I
     */
    RO_I = 'RO_I',
    /**
     * E
     */
    RO_E = 'RO_E',
    /**
     * J
     */
    RO_J = 'RO_J',
    /**
     * Y
     */
    RO_Y = 'RO_Y',
    /**
     * 5
     */
    RO_5 = 'RO_5',
    /**
     * ˝ (dead)
     */
    RO_DACU = 'RO_DACU',
    /**
     * M
     */
    RO_M = 'RO_M',
    /**
     * »
     */
    RO_RDAQ = 'RO_RDAQ',
    /**
     * _
     */
    RO_UNDS = 'RO_UNDS',
    /**
     * „
     */
    RO_DLQU = 'RO_DLQU',
    /**
     * Ă
     */
    RO_ABRV = 'RO_ABRV',
    /**
     * -
     */
    RO_MINS = 'RO_MINS',
    /**
     * ˘ (dead)
     */
    RO_BREV = 'RO_BREV',
    /**
     * X
     */
    RO_X = 'RO_X',
    /**
     * 0
     */
    RO_0 = 'RO_0',
    /**
     * €
     */
    RO_EURO = 'RO_EURO',
    /**
     * .
     */
    RO_DOT = 'RO_DOT',
    /**
     * ^ (dead)
     */
    RO_DCIR = 'RO_DCIR',
    /**
     * 9
     */
    RO_9 = 'RO_9',
    /**
     * *
     */
    RO_ASTR = 'RO_ASTR',
    /**
     * ~ (dead)
     */
    RO_DTIL = 'RO_DTIL',
    /**
     * V
     */
    RO_V = 'RO_V',
    /**
     * Đ
     */
    RO_DSTR = 'RO_DSTR',
    /**
     * ]
     */
    RO_RBRC = 'RO_RBRC',
    /**
     * ?
     */
    RO_QUES = 'RO_QUES',
    /**
     * >
     */
    RO_RABK = 'RO_RABK',
    /**
     * Î
     */
    RO_ICIR = 'RO_ICIR',
    /**
     * L
     */
    RO_L = 'RO_L',
    /**
     * W
     */
    RO_W = 'RO_W',
    /**
     * –
     */
    RO_NDSH = 'RO_NDSH',
    /**
     * C
     */
    RO_C = 'RO_C',
    /**
     * ß
     */
    RO_SS = 'RO_SS',
    /**
     * ´ (dead)
     */
    RO_ACUT = 'RO_ACUT',
    /**
     * ~
     */
    RO_TILD = 'RO_TILD',
    /**
     * Ț
     */
    RO_TCOM = 'RO_TCOM',
    /**
     * 3
     */
    RO_3 = 'RO_3',
    /**
     * &
     */
    RO_AMPR = 'RO_AMPR',
    /**
     * 1
     */
    RO_1 = 'RO_1',
    /**
     * !
     */
    RO_EXLM = 'RO_EXLM',
    /**
     * Ș
     */
    RO_SCOM = 'RO_SCOM',
    /**
     * \
     */
    RO_BSLS = 'RO_BSLS',
    /**
     * +
     */
    RO_PLUS = 'RO_PLUS',
    /**
     * %
     */
    RO_PERC = 'RO_PERC',
    /**
     * ;
     */
    RO_SCLN = 'RO_SCLN',
    /**
     * H
     */
    RO_H = 'RO_H',
    /**
     * «
     */
    RO_LDAQ = 'RO_LDAQ',
    /**
     * ±
     */
    RO_PLMN = 'RO_PLMN',
    /**
     * D
     */
    RO_D = 'RO_D',
    /**
     * P
     */
    RO_P = 'RO_P',
    /**
     * 2
     */
    RO_2 = 'RO_2',
    /**
     * T
     */
    RO_T = 'RO_T',
    /**
     * :
     */
    RO_COLN = 'RO_COLN',
    /**
     * {
     */
    RO_LCBR = 'RO_LCBR',
    /**
     * Ł
     */
    RO_LSTR = 'RO_LSTR',
    /**
     * U
     */
    RO_U = 'RO_U',
    /**
     * (
     */
    RO_LPRN = 'RO_LPRN',
    /**
     * '
     */
    RO_QUOT = 'RO_QUOT',
    /**
     * 7
     */
    RO_7 = 'RO_7',
    /**
     * ⏎
     */
    KC_ENTER = 'KC_ENTER',
    /**
     * Esc
     */
    KC_ESCAPE = 'KC_ESCAPE',
    /**
     * Tab
     */
    KC_TAB = 'KC_TAB',
    /**
     * ⌫
     */
    KC_BSPACE = 'KC_BSPACE',
    /**
     * ⎵- Spacebar
     */
    KC_SPACE = 'KC_SPACE',
    /**
     * "
     */
    DE_DQOT = 'DE_DQOT',
    /**
     * Ö
     */
    DE_OE = 'DE_OE',
    /**
     * )
     */
    DE_RPRN = 'DE_RPRN',
    /**
     * °
     */
    DE_RING = 'DE_RING',
    /**
     * -_
     */
    DE_MINS = 'DE_MINS',
    /**
     * '
     */
    DE_QUOT = 'DE_QUOT',
    /**
     * [
     */
    DE_LBRC = 'DE_LBRC',
    /**
     * _
     */
    DE_UNDS = 'DE_UNDS',
    /**
     * \
     */
    DE_BSLS = 'DE_BSLS',
    /**
     * ²
     */
    DE_SQ2 = 'DE_SQ2',
    /**
     * #'
     */
    DE_HASH = 'DE_HASH',
    /**
     * ]
     */
    DE_RBRC = 'DE_RBRC',
    /**
     * *
     */
    DE_ASTR = 'DE_ASTR',
    /**
     * {
     */
    DE_LCBR = 'DE_LCBR',
    /**
     * |
     */
    DE_PIPE = 'DE_PIPE',
    /**
     * /
     */
    DE_SLSH = 'DE_SLSH',
    /**
     * (
     */
    DE_LPRN = 'DE_LPRN',
    /**
     * Y
     */
    DE_Y = 'DE_Y',
    /**
     * :
     */
    DE_COLN = 'DE_COLN',
    /**
     * `
     */
    DE_GRV = 'DE_GRV',
    /**
     * Ä
     */
    DE_AE = 'DE_AE',
    /**
     * ´`
     */
    DE_ACUT = 'DE_ACUT',
    /**
     * Shift )
     */
    DE_RSPC = 'DE_RSPC',
    /**
     * ;
     */
    DE_SCLN = 'DE_SCLN',
    /**
     * $
     */
    DE_DLR = 'DE_DLR',
    /**
     * Shift (
     */
    DE_LSPO = 'DE_LSPO',
    /**
     * ³
     */
    DE_SQ3 = 'DE_SQ3',
    /**
     * ?
     */
    DE_QST = 'DE_QST',
    /**
     * §
     */
    DE_PARA = 'DE_PARA',
    /**
     * €
     */
    DE_EURO = 'DE_EURO',
    /**
     * +*~
     */
    DE_PLUS = 'DE_PLUS',
    /**
     * !
     */
    DE_EXLM = 'DE_EXLM',
    /**
     * Z
     */
    DE_Z = 'DE_Z',
    /**
     * Ü
     */
    DE_UE = 'DE_UE',
    /**
     * }
     */
    DE_RCBR = 'DE_RCBR',
    /**
     * <
     */
    DE_LESS = 'DE_LESS',
    /**
     * ^°
     */
    DE_CIRC = 'DE_CIRC',
    /**
     * =
     */
    DE_EQL = 'DE_EQL',
    /**
     * >
     */
    DE_MORE = 'DE_MORE',
    /**
     * @
     */
    DE_AT = 'DE_AT',
    /**
     * ß
     */
    DE_SS = 'DE_SS',
    /**
     * %
     */
    DE_PERC = 'DE_PERC',
    /**
     * &
     */
    DE_AMPR = 'DE_AMPR',
    /**
     * ~
     */
    DE_TILD = 'DE_TILD',
    /**
     * -- Hyphen / Minus
     */
    KC_MINUS = 'KC_MINUS',
    /**
     * Caps
     */
    KC_CAPSLOCK = 'KC_CAPSLOCK',
    /**
     * \
     */
    KC_BSLASH = 'KC_BSLASH',
    /**
     * Non-US # and ~
     */
    KC_NONUS_HASH = 'KC_NONUS_HASH',
    /**
     * Non-US \- Non-US backslash and pipe
     */
    KC_NONUS_BSLASH = 'KC_NONUS_BSLASH',
    /**
     * =
     */
    KC_EQUAL = 'KC_EQUAL',
    /**
     * ,
     */
    KC_COMMA = 'KC_COMMA',
    /**
     * ;- Semicolon
     */
    KC_SCOLON = 'KC_SCOLON',
    /**
     * '
     */
    KC_QUOTE = 'KC_QUOTE',
    /**
     * ]
     */
    KC_RBRACKET = 'KC_RBRACKET',
    /**
     * .
     */
    KC_DOT = 'KC_DOT',
    /**
     * /
     */
    KC_SLASH = 'KC_SLASH',
    /**
     * [
     */
    KC_LBRACKET = 'KC_LBRACKET',
    /**
     * `- Backtick (grave accent)
     */
    KC_GRAVE = 'KC_GRAVE',
    /**
     * Music off- Stop jamming on your keyboard and turn it back into a regular keyboard.
     */
    MU_OFF = 'MU_OFF',
    /**
     * Audio toggle- Toggles the speaker.
     */
    AU_TOG = 'AU_TOG',
    /**
     * Music toggle- Toggles music mode
     */
    MU_TOG = 'MU_TOG',
    /**
     * Audio on- Turns on the speaker.
     */
    AU_ON = 'AU_ON',
    /**
     * Music mode- Cycles through music modes
     */
    MU_MOD = 'MU_MOD',
    /**
     * Music on- Make your keyboard into a chiptune instrument, and jam on it. No typing will be sent to the connected computer.
     */
    MU_ON = 'MU_ON',
    /**
     * Audio off- Turns off the speaker, making your keyboard completely silent.
     */
    AU_OFF = 'AU_OFF',
    /**
     * ´
     */
    SE_ACUT = 'SE_ACUT',
    /**
     * ¨
     */
    SE_DIAE = 'SE_DIAE',
    /**
     * µ
     */
    SE_MU = 'SE_MU',
    /**
     * ]
     */
    SE_RBRC = 'SE_RBRC',
    /**
     * /
     */
    SE_SLSH = 'SE_SLSH',
    /**
     * )
     */
    SE_RPRN = 'SE_RPRN',
    /**
     * £
     */
    SE_PND = 'SE_PND',
    /**
     * @
     */
    SE_AT = 'SE_AT',
    /**
     * ~
     */
    SE_TILD = 'SE_TILD',
    /**
     * ^
     */
    SE_CIRC = 'SE_CIRC',
    /**
     * }
     */
    SE_RCBR_MAC = 'SE_RCBR_MAC',
    /**
     * "
     */
    SE_DQUO = 'SE_DQUO',
    /**
     * {
     */
    SE_LCBR = 'SE_LCBR',
    /**
     * =
     */
    SE_EQL = 'SE_EQL',
    /**
     * <
     */
    SE_LESS_MAC = 'SE_LESS_MAC',
    /**
     * ?
     */
    SE_QUES = 'SE_QUES',
    /**
     * \
     */
    SE_BSLS_MAC = 'SE_BSLS_MAC',
    /**
     * \
     */
    SE_BSLS = 'SE_BSLS',
    /**
     * §
     */
    SE_SECT = 'SE_SECT',
    /**
     * €
     */
    SE_EURO = 'SE_EURO',
    /**
     * ;
     */
    SE_SCLN = 'SE_SCLN',
    /**
     * ö
     */
    SE_OSLH = 'SE_OSLH',
    /**
     * _
     */
    SE_UNDS = 'SE_UNDS',
    /**
     * :
     */
    SE_COLN = 'SE_COLN',
    /**
     * (
     */
    SE_LPRN = 'SE_LPRN',
    /**
     * +
     */
    SE_PLUS = 'SE_PLUS',
    /**
     * <
     */
    SE_LESS = 'SE_LESS',
    /**
     * *
     */
    SE_ASTR = 'SE_ASTR',
    /**
     * |
     */
    SE_PIPE = 'SE_PIPE',
    /**
     * å
     */
    SE_AA = 'SE_AA',
    /**
     * $
     */
    SE_DLR_MAC = 'SE_DLR_MAC',
    /**
     * '
     */
    SE_APOS = 'SE_APOS',
    /**
     * >
     */
    SE_GRTR = 'SE_GRTR',
    /**
     * >
     */
    SE_GRTR_MAC = 'SE_GRTR_MAC',
    /**
     * &
     */
    SE_AMPR = 'SE_AMPR',
    /**
     * }
     */
    SE_RCBR = 'SE_RCBR',
    /**
     * |
     */
    SE_PIPE_MAC = 'SE_PIPE_MAC',
    /**
     * Shift (
     */
    SE_LSPO = 'SE_LSPO',
    /**
     * [
     */
    SE_LBRC = 'SE_LBRC',
    /**
     * ä
     */
    SE_ADIA = 'SE_ADIA',
    /**
     * $
     */
    SE_DLR = 'SE_DLR',
    /**
     * -
     */
    SE_MINS = 'SE_MINS',
    /**
     * ¤
     */
    SE_BULT = 'SE_BULT',
    /**
     * {
     */
    SE_LCBR_MAC = 'SE_LCBR_MAC',
    /**
     * Shift )
     */
    SE_RSPC = 'SE_RSPC',
    /**
     * `
     */
    SE_GRV = 'SE_GRV',
    /**
     * %
     */
    IT_PERC = 'IT_PERC',
    /**
     * +
     */
    IT_PLUS = 'IT_PLUS',
    /**
     * >
     */
    IT_RABK = 'IT_RABK',
    /**
     * à
     */
    IT_AGRV = 'IT_AGRV',
    /**
     * ^
     */
    IT_CIRC = 'IT_CIRC',
    /**
     * ç
     */
    IT_CCED = 'IT_CCED',
    /**
     * Shift )
     */
    IT_RSPC = 'IT_RSPC',
    /**
     * é
     */
    IT_EACU = 'IT_EACU',
    /**
     * #
     */
    IT_HASH = 'IT_HASH',
    /**
     * &
     */
    IT_AMPR = 'IT_AMPR',
    /**
     * ì
     */
    IT_IGRV = 'IT_IGRV',
    /**
     * è
     */
    IT_EGRV = 'IT_EGRV',
    /**
     * £
     */
    IT_PND = 'IT_PND',
    /**
     * {
     */
    IT_LCBR = 'IT_LCBR',
    /**
     * _
     */
    IT_UNDS = 'IT_UNDS',
    /**
     * .
     */
    IT_DOT = 'IT_DOT',
    /**
     * }
     */
    IT_RCBR = 'IT_RCBR',
    /**
     * )
     */
    IT_RPRN = 'IT_RPRN',
    /**
     * "
     */
    IT_DQUO = 'IT_DQUO',
    /**
     * °
     */
    IT_DEG = 'IT_DEG',
    /**
     * <
     */
    IT_LABK = 'IT_LABK',
    /**
     * §
     */
    IT_SECT = 'IT_SECT',
    /**
     * [
     */
    IT_LBRC = 'IT_LBRC',
    /**
     * ]
     */
    IT_RBRC = 'IT_RBRC',
    /**
     * ;
     */
    IT_SCLN = 'IT_SCLN',
    /**
     * !
     */
    IT_EXLM = 'IT_EXLM',
    /**
     * @
     */
    IT_AT = 'IT_AT',
    /**
     * =
     */
    IT_EQL = 'IT_EQL',
    /**
     * /
     */
    IT_SLSH = 'IT_SLSH',
    /**
     * ,
     */
    IT_COMM = 'IT_COMM',
    /**
     * $
     */
    IT_DLR = 'IT_DLR',
    /**
     * -
     */
    IT_MINS = 'IT_MINS',
    /**
     * (
     */
    IT_LPRN = 'IT_LPRN',
    /**
     * '
     */
    IT_QUOT = 'IT_QUOT',
    /**
     * ò
     */
    IT_OGRV = 'IT_OGRV',
    /**
     * *
     */
    IT_ASTR = 'IT_ASTR',
    /**
     * \
     */
    IT_BSLS = 'IT_BSLS',
    /**
     * Shift (
     */
    IT_LSPO = 'IT_LSPO',
    /**
     * ?
     */
    IT_QUES = 'IT_QUES',
    /**
     * €
     */
    IT_EURO = 'IT_EURO',
    /**
     * :
     */
    IT_COLN = 'IT_COLN',
    /**
     * ù
     */
    IT_UGRV = 'IT_UGRV',
    /**
     * |
     */
    IT_PIPE = 'IT_PIPE',
    /**
     * F12
     */
    KC_F12 = 'KC_F12',
    /**
     * F19
     */
    KC_F19 = 'KC_F19',
    /**
     * F23
     */
    KC_F23 = 'KC_F23',
    /**
     * F13
     */
    KC_F13 = 'KC_F13',
    /**
     * F9
     */
    KC_F9 = 'KC_F9',
    /**
     * F5
     */
    KC_F5 = 'KC_F5',
    /**
     * F1
     */
    KC_F1 = 'KC_F1',
    /**
     * F8
     */
    KC_F8 = 'KC_F8',
    /**
     * F4
     */
    KC_F4 = 'KC_F4',
    /**
     * F18
     */
    KC_F18 = 'KC_F18',
    /**
     * F7
     */
    KC_F7 = 'KC_F7',
    /**
     * F11
     */
    KC_F11 = 'KC_F11',
    /**
     * F2
     */
    KC_F2 = 'KC_F2',
    /**
     * F17
     */
    KC_F17 = 'KC_F17',
    /**
     * F16
     */
    KC_F16 = 'KC_F16',
    /**
     * F22
     */
    KC_F22 = 'KC_F22',
    /**
     * null
     */
    KC_F15 = 'KC_F15',
    /**
     * F21
     */
    KC_F21 = 'KC_F21',
    /**
     * F10
     */
    KC_F10 = 'KC_F10',
    /**
     * F3
     */
    KC_F3 = 'KC_F3',
    /**
     * F24
     */
    KC_F24 = 'KC_F24',
    /**
     * null
     */
    KC_F14 = 'KC_F14',
    /**
     * F6
     */
    KC_F6 = 'KC_F6',
    /**
     * F20
     */
    KC_F20 = 'KC_F20',
    /**
     * <
     */
    FRCH_LABK = 'FRCH_LABK',
    /**
     * €
     */
    FRCH_EURO = 'FRCH_EURO',
    /**
     * -
     */
    FRCH_MINS = 'FRCH_MINS',
    /**
     * /
     */
    FRCH_SLSH = 'FRCH_SLSH',
    /**
     * ¢
     */
    FRCH_CENT = 'FRCH_CENT',
    /**
     * }
     */
    FRCH_RCBR = 'FRCH_RCBR',
    /**
     * è
     */
    FRCH_EGRV = 'FRCH_EGRV',
    /**
     * \ (backslash)
     */
    FRCH_BSLS = 'FRCH_BSLS',
    /**
     * %
     */
    FRCH_PERC = 'FRCH_PERC',
    /**
     * =
     */
    FRCH_EQL = 'FRCH_EQL',
    /**
     * ^ (dead)
     */
    FRCH_CIRC = 'FRCH_CIRC',
    /**
     * £
     */
    FRCH_PND = 'FRCH_PND',
    /**
     * §
     */
    FRCH_SECT = 'FRCH_SECT',
    /**
     * ]
     */
    FRCH_RBRC = 'FRCH_RBRC',
    /**
     * ö
     */
    FRCH_ODIA = 'FRCH_ODIA',
    /**
     * ´ (dead)
     */
    FRCH_ACUT = 'FRCH_ACUT',
    /**
     * ;
     */
    FRCH_SCLN = 'FRCH_SCLN',
    /**
     * :
     */
    FRCH_COLN = 'FRCH_COLN',
    /**
     * >
     */
    FRCH_RABK = 'FRCH_RABK',
    /**
     * ç
     */
    FRCH_CCED = 'FRCH_CCED',
    /**
     * ?
     */
    FRCH_QUES = 'FRCH_QUES',
    /**
     * +
     */
    FRCH_PLUS = 'FRCH_PLUS',
    /**
     * ¨ (dead)
     */
    FRCH_DIAE = 'FRCH_DIAE',
    /**
     * é
     */
    FRCH_EACU = 'FRCH_EACU',
    /**
     * à
     */
    FRCH_AGRV = 'FRCH_AGRV',
    /**
     * ¦
     */
    FRCH_BRKP = 'FRCH_BRKP',
    /**
     * *
     */
    FRCH_ASTR = 'FRCH_ASTR',
    /**
     * $
     */
    FRCH_DLR = 'FRCH_DLR',
    /**
     * ü
     */
    FRCH_UDIA = 'FRCH_UDIA',
    /**
     * #
     */
    FRCH_HASH = 'FRCH_HASH',
    /**
     * '
     */
    FRCH_QUOT = 'FRCH_QUOT',
    /**
     * ä
     */
    FRCH_ADIA = 'FRCH_ADIA',
    /**
     * )
     */
    FRCH_RPRN = 'FRCH_RPRN',
    /**
     * !
     */
    FRCH_EXLM = 'FRCH_EXLM',
    /**
     * {
     */
    FRCH_LCBR = 'FRCH_LCBR',
    /**
     * _
     */
    FRCH_UNDS = 'FRCH_UNDS',
    /**
     * °
     */
    FRCH_DEG = 'FRCH_DEG',
    /**
     * @
     */
    FRCH_AT = 'FRCH_AT',
    /**
     * (
     */
    FRCH_LPRN = 'FRCH_LPRN',
    /**
     * ` (dead)
     */
    FRCH_GRV = 'FRCH_GRV',
    /**
     * Z
     */
    FRCH_Z = 'FRCH_Z',
    /**
     * ~ (dead)
     */
    FRCH_TILD = 'FRCH_TILD',
    /**
     * |
     */
    FRCH_PIPE = 'FRCH_PIPE',
    /**
     * Y
     */
    FRCH_Y = 'FRCH_Y',
    /**
     * ¬
     */
    FRCH_NOT = 'FRCH_NOT',
    /**
     * "
     */
    FRCH_DQUO = 'FRCH_DQUO',
    /**
     * &
     */
    FRCH_AMPR = 'FRCH_AMPR',
    /**
     * [
     */
    FRCH_LBRC = 'FRCH_LBRC',
    /**
     * °
     */
    IS_19 = 'IS_19',
    /**
     * <
     */
    IS_05 = 'IS_05',
    /**
     * æ
     */
    IS_21 = 'IS_21',
    /**
     * ö
     */
    IS_20 = 'IS_20',
    /**
     * >
     */
    IS_04 = 'IS_04',
    /**
     * /
     */
    IS_13 = 'IS_13',
    /**
     * (
     */
    IS_12 = 'IS_12',
    /**
     * |
     */
    IS_03 = 'IS_03',
    /**
     * &
     */
    IS_14 = 'IS_14',
    /**
     * ?
     */
    IS_08 = 'IS_08',
    /**
     * +
     */
    IS_15 = 'IS_15',
    /**
     * -
     */
    IS_18 = 'IS_18',
    /**
     * =
     */
    IS_11 = 'IS_11',
    /**
     * '
     */
    IS_17 = 'IS_17',
    /**
     * ´
     */
    IS_16 = 'IS_16',
    /**
     * :
     */
    IS_01 = 'IS_01',
    /**
     * _
     */
    IS_09 = 'IS_09',
    /**
     * ð
     */
    IS_22 = 'IS_22',
    /**
     * ¨
     */
    IS_10 = 'IS_10',
    /**
     * *
     */
    IS_06 = 'IS_06',
    /**
     * ;
     */
    IS_02 = 'IS_02',
    /**
     * ´
     */
    IS_07 = 'IS_07',
    /**
     * µ
     */
    FRCA_02 = 'FRCA_02',
    /**
     * >
     */
    FRCA_10 = 'FRCA_10',
    /**
     * @
     */
    FRCA_29 = 'FRCA_29',
    /**
     * \
     */
    FRCA_08 = 'FRCA_08',
    /**
     * £
     */
    FRCA_28 = 'FRCA_28',
    /**
     * ?
     */
    FRCA_31 = 'FRCA_31',
    /**
     * `
     */
    FRCA_13 = 'FRCA_13',
    /**
     * ¤
     */
    FRCA_26 = 'FRCA_26',
    /**
     * §
     */
    FRCA_19 = 'FRCA_19',
    /**
     * ²
     */
    FRCA_23 = 'FRCA_23',
    /**
     * "
     */
    FRCA_33 = 'FRCA_33',
    /**
     * ]
     */
    FRCA_03 = 'FRCA_03',
    /**
     * ±
     */
    FRCA_30 = 'FRCA_30',
    /**
     * ¶
     */
    FRCA_18 = 'FRCA_18',
    /**
     * {
     */
    FRCA_05 = 'FRCA_05',
    /**
     * ¯
     */
    FRCA_01 = 'FRCA_01',
    /**
     * <
     */
    FRCA_11 = 'FRCA_11',
    /**
     * |
     */
    FRCA_09 = 'FRCA_09',
    /**
     * ^
     */
    FRCA_15 = 'FRCA_15',
    /**
     * ³
     */
    FRCA_22 = 'FRCA_22',
    /**
     * ¸
     */
    FRCA_12 = 'FRCA_12',
    /**
     * }
     */
    FRCA_06 = 'FRCA_06',
    /**
     * ¨
     */
    FRCA_14 = 'FRCA_14',
    /**
     * /
     */
    FRCA_32 = 'FRCA_32',
    /**
     * ½
     */
    FRCA_20 = 'FRCA_20',
    /**
     * [
     */
    FRCA_04 = 'FRCA_04',
    /**
     * ¢
     */
    FRCA_27 = 'FRCA_27',
    /**
     * ~
     */
    FRCA_17 = 'FRCA_17',
    /**
     * é
     */
    FRCA_16 = 'FRCA_16',
    /**
     * ¦
     */
    FRCA_24 = 'FRCA_24',
    /**
     * #
     */
    FRCA_07 = 'FRCA_07',
    /**
     * ¬
     */
    FRCA_25 = 'FRCA_25',
    /**
     * ¼
     */
    FRCA_21 = 'FRCA_21',
    /**
     * Reset- Resets the keyboard back to the bootloader, to flash new firmware.
     */
    RESET = 'RESET',
    /**
     * EEPROM- Wipe the EEPROM. Should be used sparingly, for troubleshooting only.
     */
    EEP_RST = 'EEP_RST',
    /**
     * NKRO- Toggle N-Key Rollover mode
     */
    MAGIC_TOGGLE_NKRO = 'MAGIC_TOGGLE_NKRO',
    /**
     * LANG 4
     */
    KC_LANG4 = 'KC_LANG4',
    /**
     * LANG 3
     */
    KC_LANG3 = 'KC_LANG3',
    /**
     * LANG 1- Language 1 key for Asian languages
     */
    KC_LANG1 = 'KC_LANG1',
    /**
     * LANG 9
     */
    KC_LANG9 = 'KC_LANG9',
    /**
     * LANG 8
     */
    KC_LANG8 = 'KC_LANG8',
    /**
     * LANG 7
     */
    KC_LANG7 = 'KC_LANG7',
    /**
     * LANG 6
     */
    KC_LANG6 = 'KC_LANG6',
    /**
     * LANG 2- Language 2 key for Asian languages
     */
    KC_LANG2 = 'KC_LANG2',
    /**
     * LANG 5
     */
    KC_LANG5 = 'KC_LANG5',
    /**
     * °
     */
    FR_OVRR = 'FR_OVRR',
    /**
     * 4
     */
    FR_4 = 'FR_4',
    /**
     * [
     */
    FR_LBRC = 'FR_LBRC',
    /**
     * >
     */
    FR_GRTR = 'FR_GRTR',
    /**
     * ç
     */
    FR_CCED = 'FR_CCED',
    /**
     * /
     */
    FR_SLSH = 'FR_SLSH',
    /**
     * %
     */
    FR_PERC = 'FR_PERC',
    /**
     * 3
     */
    FR_3 = 'FR_3',
    /**
     * }
     */
    FR_RCBR = 'FR_RCBR',
    /**
     * @
     */
    FR_AT = 'FR_AT',
    /**
     * è
     */
    FR_EGRV = 'FR_EGRV',
    /**
     * `
     */
    FR_GRV = 'FR_GRV',
    /**
     * €
     */
    FR_EURO = 'FR_EURO',
    /**
     * W
     */
    FR_W = 'FR_W',
    /**
     * 5
     */
    FR_5 = 'FR_5',
    /**
     * 9
     */
    FR_9 = 'FR_9',
    /**
     * )
     */
    FR_RPRN = 'FR_RPRN',
    /**
     * 8
     */
    FR_8 = 'FR_8',
    /**
     * μ
     */
    FR_MU = 'FR_MU',
    /**
     * A
     */
    FR_A = 'FR_A',
    /**
     * {
     */
    FR_LCBR = 'FR_LCBR',
    /**
     * ¤
     */
    FR_BULT = 'FR_BULT',
    /**
     * 1
     */
    FR_1 = 'FR_1',
    /**
     * Shift )
     */
    FR_RSPC = 'FR_RSPC',
    /**
     * #
     */
    FR_HASH = 'FR_HASH',
    /**
     * 2
     */
    FR_2 = 'FR_2',
    /**
     * é
     */
    FR_EACU = 'FR_EACU',
    /**
     * :
     */
    FR_COLN = 'FR_COLN',
    /**
     * <
     */
    FR_LESS = 'FR_LESS',
    /**
     * Q
     */
    FR_Q = 'FR_Q',
    /**
     * +
     */
    FR_PLUS = 'FR_PLUS',
    /**
     * ¨
     */
    FR_UMLT = 'FR_UMLT',
    /**
     * Shift (
     */
    FR_LSPO = 'FR_LSPO',
    /**
     * ?
     */
    FR_QUES = 'FR_QUES',
    /**
     * 7
     */
    FR_7 = 'FR_7',
    /**
     * '
     */
    FR_APOS = 'FR_APOS',
    /**
     * 6
     */
    FR_6 = 'FR_6',
    /**
     * _
     */
    FR_UNDS = 'FR_UNDS',
    /**
     * !
     */
    FR_EXLM = 'FR_EXLM',
    /**
     * .
     */
    FR_DOT = 'FR_DOT',
    /**
     * ^
     */
    FR_CIRC = 'FR_CIRC',
    /**
     * &
     */
    FR_AMP = 'FR_AMP',
    /**
     * *
     */
    FR_ASTR = 'FR_ASTR',
    /**
     * ²
     */
    FR_SUP2 = 'FR_SUP2',
    /**
     * ]
     */
    FR_RBRC = 'FR_RBRC',
    /**
     * £
     */
    FR_PND = 'FR_PND',
    /**
     * |
     */
    FR_PIPE = 'FR_PIPE',
    /**
     * à
     */
    FR_AGRV = 'FR_AGRV',
    /**
     * ^
     */
    FR_CCIRC = 'FR_CCIRC',
    /**
     * =
     */
    FR_EQL = 'FR_EQL',
    /**
     * (
     */
    FR_LPRN = 'FR_LPRN',
    /**
     * M
     */
    FR_M = 'FR_M',
    /**
     * "
     */
    FR_DQUO = 'FR_DQUO',
    /**
     * -
     */
    FR_MINS = 'FR_MINS',
    /**
     * ,
     */
    FR_COMM = 'FR_COMM',
    /**
     * ù
     */
    FR_UGRV = 'FR_UGRV',
    /**
     * ~
     */
    FR_TILD = 'FR_TILD',
    /**
     * Z
     */
    FR_Z = 'FR_Z',
    /**
     * §
     */
    FR_SECT = 'FR_SECT',
    /**
     * \
     */
    FR_BSLS = 'FR_BSLS',
    /**
     * $
     */
    FR_DLR = 'FR_DLR',
    /**
     * 0
     */
    FR_0 = 'FR_0',
    /**
     * ;
     */
    FR_SCLN = 'FR_SCLN',
    /**
     * ˘
     */
    CSA_DBRV = 'CSA_DBRV',
    /**
     * ˙
     */
    CSA_DDTA = 'CSA_DDTA',
    /**
     * μ
     */
    CSA_MU = 'CSA_MU',
    /**
     * ’
     */
    CSA_RQOT = 'CSA_RQOT',
    /**
     * ¸
     */
    CSA_DCED = 'CSA_DCED',
    /**
     * Shift (
     */
    CSA_LSPO = 'CSA_LSPO',
    /**
     * ˛
     */
    CSA_DOGO = 'CSA_DOGO',
    /**
     * ©
     */
    CSA_CPRT = 'CSA_CPRT',
    /**
     * “
     */
    CSA_LDQT = 'CSA_LDQT',
    /**
     * ù
     */
    CSA_UGRV = 'CSA_UGRV',
    /**
     * ŉ
     */
    CSA_NAPO = 'CSA_NAPO',
    /**
     * ħ
     */
    CSA_HSTK = 'CSA_HSTK',
    /**
     * ø
     */
    CSA_OSTK = 'CSA_OSTK',
    /**
     * ¿
     */
    CSA_IQST = 'CSA_IQST',
    /**
     * ¯
     */
    CSA_DMCR = 'CSA_DMCR',
    /**
     * [
     */
    CSA_LBRC = 'CSA_LBRC',
    /**
     * ĸ
     */
    CSA_KRA = 'CSA_KRA',
    /**
     * ω
     */
    CSA_OMEG = 'CSA_OMEG',
    /**
     * ÷
     */
    CSA_OBEL = 'CSA_OBEL',
    /**
     * ²
     */
    CSA_SUP2 = 'CSA_SUP2',
    /**
     * <
     */
    CSA_LESS = 'CSA_LESS',
    /**
     * ŧ
     */
    CSA_T_STROKE = 'CSA_T_STROKE',
    /**
     * ı
     */
    CSA_DLSI = 'CSA_DLSI',
    /**
     * ĳ
     */
    CSA_IJ = 'CSA_IJ',
    /**
     * ¬
     */
    CSA_NEGT = 'CSA_NEGT',
    /**
     * \
     */
    CSA_BSLS = 'CSA_BSLS',
    /**
     * Ω
     */
    CSA_MOMEG = 'CSA_MOMEG',
    /**
     * ‘
     */
    CSA_LQOT = 'CSA_LQOT',
    /**
     * º
     */
    CSA_ORDO = 'CSA_ORDO',
    /**
     * ¥
     */
    CSA_YEN = 'CSA_YEN',
    /**
     * ―
     */
    CSA_HZBR = 'CSA_HZBR',
    /**
     * œ
     */
    CSA_OE = 'CSA_OE',
    /**
     * ¾
     */
    CSA_3QRT = 'CSA_3QRT',
    /**
     * ⅞
     */
    CSA_7ON8 = 'CSA_7ON8',
    /**
     * ¢
     */
    CSA_CENT = 'CSA_CENT',
    /**
     * ŀ
     */
    CSA_LFLD = 'CSA_LFLD',
    /**
     * {
     */
    CSA_LCBR = 'CSA_LCBR',
    /**
     * ß
     */
    CSA_SRPS = 'CSA_SRPS',
    /**
     * Ç
     */
    CSA_CCED = 'CSA_CCED',
    /**
     * ▶
     */
    CSA_RARW = 'CSA_RARW',
    /**
     * à
     */
    CSA_AGRV = 'CSA_AGRV',
    /**
     * ▼
     */
    CSA_DARW = 'CSA_DARW',
    /**
     * ⅜
     */
    CSA_3ON8 = 'CSA_3ON8',
    /**
     * ¡
     */
    CSA_IXLM = 'CSA_IXLM',
    /**
     * ^
     */
    CSA_DCRC = 'CSA_DCRC',
    /**
     * ´
     */
    CSA_DACT = 'CSA_DACT',
    /**
     * ”
     */
    CSA_RDQT = 'CSA_RDQT',
    /**
     * ª
     */
    CSA_ORDA = 'CSA_ORDA',
    /**
     * ™
     */
    CSA_TM = 'CSA_TM',
    /**
     * >
     */
    CSA_GRTR = 'CSA_GRTR',
    /**
     * ‐
     */
    CSA_SHYP = 'CSA_SHYP',
    /**
     * ½
     */
    CSA_1HLF = 'CSA_1HLF',
    /**
     * ⅝
     */
    CSA_5ON8 = 'CSA_5ON8',
    /**
     * €
     */
    CSA_EURO = 'CSA_EURO',
    /**
     * ×
     */
    CSA_TIMS = 'CSA_TIMS',
    /**
     * §
     */
    CSA_SECT = 'CSA_SECT',
    /**
     * ]
     */
    CSA_RBRC = 'CSA_RBRC',
    /**
     * ŋ
     */
    CSA_ENG = 'CSA_ENG',
    /**
     * ¹
     */
    CSA_SUP1 = 'CSA_SUP1',
    /**
     * þ
     */
    CSA_THORN = 'CSA_THORN',
    /**
     * °
     */
    CSA_DRNG = 'CSA_DRNG',
    /**
     * Shift )
     */
    CSA_RSPC = 'CSA_RSPC',
    /**
     * ¼
     */
    CSA_1QRT = 'CSA_1QRT',
    /**
     * ▲
     */
    CSA_UP_ARROW = 'CSA_UP_ARROW',
    /**
     * ⎵
     */
    CSA_NBSP = 'CSA_NBSP',
    /**
     * ð
     */
    CSA_ETH = 'CSA_ETH',
    /**
     * è
     */
    CSA_EGRV = 'CSA_EGRV',
    /**
     * }
     */
    CSA_RCBR = 'CSA_RCBR',
    /**
     * `
     */
    CSA_DGRV = 'CSA_DGRV',
    /**
     * æ
     */
    CSA_AE = 'CSA_AE',
    /**
     * ?
     */
    CSA_QEST = 'CSA_QEST',
    /**
     * £
     */
    CSA_POUND = 'CSA_POUND',
    /**
     * ®
     */
    CSA_RTM = 'CSA_RTM',
    /**
     * /
     */
    CSA_SLASH = 'CSA_SLASH',
    /**
     * ~
     */
    CSA_DTLD = 'CSA_DTLD',
    /**
     * ¨
     */
    CSA_DTRM = 'CSA_DTRM',
    /**
     * ◀
     */
    CSA_LARW = 'CSA_LARW',
    /**
     * '
     */
    CSA_APOS = 'CSA_APOS',
    /**
     * ♪
     */
    CSA_8NOT = 'CSA_8NOT',
    /**
     * ±
     */
    CSA_PSMS = 'CSA_PSMS',
    /**
     * ¶
     */
    CSA_PARG = 'CSA_PARG',
    /**
     * «
     */
    CSA_LGIL = 'CSA_LGIL',
    /**
     * ¦
     */
    CSA_BPIP = 'CSA_BPIP',
    /**
     * ³
     */
    CSA_SUP3 = 'CSA_SUP3',
    /**
     * é
     */
    CSA_ECUT = 'CSA_ECUT',
    /**
     * ¤
     */
    CSA_CURR = 'CSA_CURR',
    /**
     * |
     */
    CSA_PIPE = 'CSA_PIPE',
    /**
     * °
     */
    CSA_DEGR = 'CSA_DEGR',
    /**
     * ˇ
     */
    CSA_DCAR = 'CSA_DCAR',
    /**
     * »
     */
    CSA_RGIL = 'CSA_RGIL',
    /**
     * ł
     */
    CSA_LSTK = 'CSA_LSTK',
    /**
     * ˝
     */
    CSA_DDCT = 'CSA_DDCT',
    /**
     * "
     */
    CSA_DQOT = 'CSA_DQOT',
    /**
     * €
     */
    CSA_EURB = 'CSA_EURB',
    /**
     * ~
     */
    KC_TILD = 'KC_TILD',
    /**
     * _
     */
    KC_UNDS = 'KC_UNDS',
    /**
     * #
     */
    KC_HASH = 'KC_HASH',
    /**
     * @
     */
    KC_AT = 'KC_AT',
    /**
     * }
     */
    KC_RCBR = 'KC_RCBR',
    /**
     * |
     */
    KC_PIPE = 'KC_PIPE',
    /**
     * {
     */
    KC_LCBR = 'KC_LCBR',
    /**
     * !
     */
    KC_EXLM = 'KC_EXLM',
    /**
     * (
     */
    KC_LPRN = 'KC_LPRN',
    /**
     * ^
     */
    KC_CIRC = 'KC_CIRC',
    /**
     * *
     */
    KC_ASTR = 'KC_ASTR',
    /**
     * $
     */
    KC_DLR = 'KC_DLR',
    /**
     * )
     */
    KC_RPRN = 'KC_RPRN',
    /**
     * <
     */
    KC_LABK = 'KC_LABK',
    /**
     * +- Plus
     */
    KC_PLUS = 'KC_PLUS',
    /**
     * >
     */
    KC_RABK = 'KC_RABK',
    /**
     * "
     */
    KC_DQUO = 'KC_DQUO',
    /**
     * :
     */
    KC_COLN = 'KC_COLN',
    /**
     * &
     */
    KC_AMPR = 'KC_AMPR',
    /**
     * %
     */
    KC_PERC = 'KC_PERC',
    /**
     * ?
     */
    KC_QUES = 'KC_QUES',
    /**
     * Raise- An homage to the original Planck, the raise key activates the Raise layer, but only as long as you keep it pressed.
     */
    RAISE = 'RAISE',
    /**
     * ❐ Raise- Toggle Raise: Switch to Raise. Tap this key again to return to the current layer.
     */
    RAISE_TG = 'RAISE_TG',
    /**
     * ❐ Lower- Toggle Lower: Switch to Lower. Tap this key again to return to the current layer.
     */
    LOWER_TG = 'LOWER_TG',
    /**
     * TT Lower- Lower Tap-Toggle. If you hold the key down, Lower becomes active, and then deactivates when you let go. And if you tap it, Lower simply becomes active (toggles on).
     */
    LOWER_TT = 'LOWER_TT',
    /**
     * Lower OSL- One-shot Lower: Flips Lower on, but only for one keypress. Once you press a key in Lower, it is then deactivated. You can keep Lower active by holding the key down.
     */
    LOWER_OSL = 'LOWER_OSL',
    /**
     * TO- Direct switch to a layer. Works for switching to lower layers as well.
     */
    TO = 'TO',
    /**
     * Lower- An homage to the original Planck, the lower key activates the Lower layer, but only as long as you keep it pressed.
     */
    LOWER = 'LOWER',
    /**
     * ❐ - Toggle layer: Switch to a given layer. Tap this key again to return to the current layer.
     */
    TG = 'TG',
    /**
     * TT- Layer Tap-Toggle. If you hold the key down, the layer becomes active, and then deactivates when you let go. And if you tap it, the layer simply becomes active (toggles on).
     */
    TT = 'TT',
    /**
     * ⟲- Momentary layer toggle: Activates the selected layer, but only as long as you keep this key pressed.
     */
    MO = 'MO',
    /**
     * Raise OSL- One-shot Raise: Flips Raise on, but only for one keypress. Once you press a key in Raise, it is then deactivated. You can keep Raise active by holding the key down.
     */
    RAISE_OSL = 'RAISE_OSL',
    /**
     * OSL- One-shot layer: Flips a layer on, but only for one keypress. Once you press a key in the new layer, the layer is then deactivated. You can keep the layer active by holding the key down.
     */
    OSL = 'OSL',
    /**
     * TT Raise- Raise Tap-Toggle. If you hold the key down, Raise becomes active, and then deactivates when you let go. And if you tap it, Raise simply becomes active (toggles on).
     */
    RAISE_TT = 'RAISE_TT',
    /**
     * かな
     */
    JP_MKANA = 'JP_MKANA',
    /**
     * /
     */
    JP_SLSH = 'JP_SLSH',
    /**
     * $
     */
    JP_DLR = 'JP_DLR',
    /**
     * `
     */
    JP_GRV = 'JP_GRV',
    /**
     * \
     */
    JP_BSLS = 'JP_BSLS',
    /**
     * =
     */
    JP_EQL = 'JP_EQL',
    /**
     * +
     */
    JP_PLUS = 'JP_PLUS',
    /**
     * <
     */
    JP_LT = 'JP_LT',
    /**
     * {
     */
    JP_LCBR = 'JP_LCBR',
    /**
     * |
     */
    JP_PIPE = 'JP_PIPE',
    /**
     * !
     */
    JP_EXLM = 'JP_EXLM',
    /**
     * 変換
     */
    JP_HENK = 'JP_HENK',
    /**
     * 半角 / 全角 / 漢字
     */
    JP_ZHTG = 'JP_ZHTG',
    /**
     * .
     */
    JP_DOT = 'JP_DOT',
    /**
     * -
     */
    JP_MINS = 'JP_MINS',
    /**
     * 英数
     */
    JP_MEISU = 'JP_MEISU',
    /**
     * Shift (
     */
    JP_LSPO = 'JP_LSPO',
    /**
     * ¥
     */
    JP_YEN = 'JP_YEN',
    /**
     * Shift )
     */
    JP_RSPC = 'JP_RSPC',
    /**
     * %
     */
    JP_PERC = 'JP_PERC',
    /**
     * :
     */
    JP_COLN = 'JP_COLN',
    /**
     * "
     */
    JP_DQT = 'JP_DQT',
    /**
     * >
     */
    JP_GT = 'JP_GT',
    /**
     * カタカナ / ひらがな / ローマ字
     */
    JP_KANA = 'JP_KANA',
    /**
     * &
     */
    JP_AMPR = 'JP_AMPR',
    /**
     * ;
     */
    JP_SCLN = 'JP_SCLN',
    /**
     * ]
     */
    JP_RBRC = 'JP_RBRC',
    /**
     * }
     */
    JP_RCBR = 'JP_RCBR',
    /**
     * )
     */
    JP_RPRN = 'JP_RPRN',
    /**
     * ^
     */
    JP_CIRC = 'JP_CIRC',
    /**
     * @
     */
    JP_AT = 'JP_AT',
    /**
     * 無変換
     */
    JP_MHEN = 'JP_MHEN',
    /**
     * '
     */
    JP_QUOT = 'JP_QUOT',
    /**
     * (
     */
    JP_LPRN = 'JP_LPRN',
    /**
     * ?
     */
    JP_QUES = 'JP_QUES',
    /**
     * #
     */
    JP_HASH = 'JP_HASH',
    /**
     * [
     */
    JP_LBRC = 'JP_LBRC',
    /**
     * _
     */
    JP_UNDS = 'JP_UNDS',
    /**
     * *
     */
    JP_ASTR = 'JP_ASTR',
    /**
     * ,
     */
    JP_COMM = 'JP_COMM',
    /**
     * /
     */
    PT_SLSH = 'PT_SLSH',
    /**
     * *
     */
    PT_ASTR = 'PT_ASTR',
    /**
     * «
     */
    PT_LDAQ = 'PT_LDAQ',
    /**
     * |
     */
    PT_PIPE = 'PT_PIPE',
    /**
     * <
     */
    PT_LABK = 'PT_LABK',
    /**
     * Shift )
     */
    PT_RSPC = 'PT_RSPC',
    /**
     * .
     */
    PT_DOT = 'PT_DOT',
    /**
     * #
     */
    PT_HASH = 'PT_HASH',
    /**
     * ;
     */
    PT_SCLN = 'PT_SCLN',
    /**
     * §
     */
    PT_SECT = 'PT_SECT',
    /**
     * Ç
     */
    PT_CCED = 'PT_CCED',
    /**
     * '
     */
    PT_QUOT = 'PT_QUOT',
    /**
     * ,
     */
    PT_COMM = 'PT_COMM',
    /**
     * "
     */
    PT_DQUO = 'PT_DQUO',
    /**
     * Shift (
     */
    PT_LSPO = 'PT_LSPO',
    /**
     * ´
     */
    PT_ACUT = 'PT_ACUT',
    /**
     * ¨
     */
    PT_DIAE = 'PT_DIAE',
    /**
     * -
     */
    PT_MINS = 'PT_MINS',
    /**
     * =
     */
    PT_EQL = 'PT_EQL',
    /**
     * +
     */
    PT_PLUS = 'PT_PLUS',
    /**
     * ]
     */
    PT_RBRC = 'PT_RBRC',
    /**
     * !
     */
    PT_EXLM = 'PT_EXLM',
    /**
     * €
     */
    PT_EURO = 'PT_EURO',
    /**
     * ^
     */
    PT_CIRC = 'PT_CIRC',
    /**
     * &
     */
    PT_AMPR = 'PT_AMPR',
    /**
     * $
     */
    PT_DLR = 'PT_DLR',
    /**
     * @
     */
    PT_AT = 'PT_AT',
    /**
     * º
     */
    PT_MORD = 'PT_MORD',
    /**
     * »
     */
    PT_RDAQ = 'PT_RDAQ',
    /**
     * £
     */
    PT_PND = 'PT_PND',
    /**
     * >
     */
    PT_RABK = 'PT_RABK',
    /**
     * [
     */
    PT_LBRC = 'PT_LBRC',
    /**
     * :
     */
    PT_COLN = 'PT_COLN',
    /**
     * _
     */
    PT_UNDS = 'PT_UNDS',
    /**
     * {
     */
    PT_LCBR = 'PT_LCBR',
    /**
     * ~
     */
    PT_TILD = 'PT_TILD',
    /**
     * %
     */
    PT_PERC = 'PT_PERC',
    /**
     * ?
     */
    PT_QUES = 'PT_QUES',
    /**
     * )
     */
    PT_RPRN = 'PT_RPRN',
    /**
     * }
     */
    PT_RCBR = 'PT_RCBR',
    /**
     * `
     */
    PT_GRV = 'PT_GRV',
    /**
     * \
     */
    PT_BSLS = 'PT_BSLS',
    /**
     * ª
     */
    PT_FORD = 'PT_FORD',
    /**
     * (
     */
    PT_LPRN = 'PT_LPRN',
    /**
     * *
     */
    UK_ASTR = 'UK_ASTR',
    /**
     * I
     */
    UK_I = 'UK_I',
    /**
     * T
     */
    UK_T = 'UK_T',
    /**
     * G
     */
    UK_G = 'UK_G',
    /**
     * 8
     */
    UK_8 = 'UK_8',
    /**
     * 1
     */
    UK_1 = 'UK_1',
    /**
     * $
     */
    UK_DLR = 'UK_DLR',
    /**
     * <
     */
    UK_LABK = 'UK_LABK',
    /**
     * M
     */
    UK_M = 'UK_M',
    /**
     * ¬
     */
    UK_NOT = 'UK_NOT',
    /**
     * !
     */
    UK_EXLM = 'UK_EXLM',
    /**
     * {
     */
    UK_LCBR = 'UK_LCBR',
    /**
     * \
     */
    UK_BSLS = 'UK_BSLS',
    /**
     * _
     */
    UK_UNDS = 'UK_UNDS',
    /**
     * H
     */
    UK_H = 'UK_H',
    /**
     * L
     */
    UK_L = 'UK_L',
    /**
     * €
     */
    UK_EURO = 'UK_EURO',
    /**
     * D
     */
    UK_D = 'UK_D',
    /**
     * A
     */
    UK_A = 'UK_A',
    /**
     * Ú
     */
    UK_UACU = 'UK_UACU',
    /**
     * P
     */
    UK_P = 'UK_P',
    /**
     * £
     */
    UK_PND = 'UK_PND',
    /**
     * C
     */
    UK_C = 'UK_C',
    /**
     * 9
     */
    UK_9 = 'UK_9',
    /**
     * "
     */
    UK_DQUO = 'UK_DQUO',
    /**
     * 6
     */
    UK_6 = 'UK_6',
    /**
     * -
     */
    UK_MINS = 'UK_MINS',
    /**
     * Í
     */
    UK_IACU = 'UK_IACU',
    /**
     * :
     */
    UK_COLN = 'UK_COLN',
    /**
     * ^
     */
    UK_CIRC = 'UK_CIRC',
    /**
     * 4
     */
    UK_4 = 'UK_4',
    /**
     * &
     */
    UK_AMPR = 'UK_AMPR',
    /**
     * J
     */
    UK_J = 'UK_J',
    /**
     * >
     */
    UK_RABK = 'UK_RABK',
    /**
     * /
     */
    UK_SLSH = 'UK_SLSH',
    /**
     * [
     */
    UK_LBRC = 'UK_LBRC',
    /**
     * '
     */
    UK_QUOT = 'UK_QUOT',
    /**
     * ;
     */
    UK_SCLN = 'UK_SCLN',
    /**
     * Y
     */
    UK_Y = 'UK_Y',
    /**
     * X
     */
    UK_X = 'UK_X',
    /**
     * 2
     */
    UK_2 = 'UK_2',
    /**
     * |
     */
    UK_PIPE = 'UK_PIPE',
    /**
     * ,
     */
    UK_COMM = 'UK_COMM',
    /**
     * ¦
     */
    UK_BRKP = 'UK_BRKP',
    /**
     * ]
     */
    UK_RBRC = 'UK_RBRC',
    /**
     * Z
     */
    UK_Z = 'UK_Z',
    /**
     * }
     */
    UK_RCBR = 'UK_RCBR',
    /**
     * U
     */
    UK_U = 'UK_U',
    /**
     * 0
     */
    UK_0 = 'UK_0',
    /**
     * F
     */
    UK_F = 'UK_F',
    /**
     * =
     */
    UK_EQL = 'UK_EQL',
    /**
     * S
     */
    UK_S = 'UK_S',
    /**
     * (
     */
    UK_LPRN = 'UK_LPRN',
    /**
     * W
     */
    UK_W = 'UK_W',
    /**
     * V
     */
    UK_V = 'UK_V',
    /**
     * Á
     */
    UK_AACU = 'UK_AACU',
    /**
     * @
     */
    UK_AT = 'UK_AT',
    /**
     * 3
     */
    UK_3 = 'UK_3',
    /**
     * ?
     */
    UK_QUES = 'UK_QUES',
    /**
     * Q
     */
    UK_Q = 'UK_Q',
    /**
     * Ó
     */
    UK_OACU = 'UK_OACU',
    /**
     * %
     */
    UK_PERC = 'UK_PERC',
    /**
     * )
     */
    UK_RPRN = 'UK_RPRN',
    /**
     * B
     */
    UK_B = 'UK_B',
    /**
     * +
     */
    UK_PLUS = 'UK_PLUS',
    /**
     * É
     */
    UK_EACU = 'UK_EACU',
    /**
     * N
     */
    UK_N = 'UK_N',
    /**
     * E
     */
    UK_E = 'UK_E',
    /**
     * #
     */
    UK_HASH = 'UK_HASH',
    /**
     * `
     */
    UK_GRV = 'UK_GRV',
    /**
     * K
     */
    UK_K = 'UK_K',
    /**
     * .
     */
    UK_DOT = 'UK_DOT',
    /**
     * O
     */
    UK_O = 'UK_O',
    /**
     * R
     */
    UK_R = 'UK_R',
    /**
     * 5
     */
    UK_5 = 'UK_5',
    /**
     * ~
     */
    UK_TILD = 'UK_TILD',
    /**
     * 7
     */
    UK_7 = 'UK_7',
    /**
     * Int 3 (yen)
     */
    KC_INT3 = 'KC_INT3',
    /**
     * Int 1
     */
    KC_INT1 = 'KC_INT1',
    /**
     * Int 4
     */
    KC_INT4 = 'KC_INT4',
    /**
     * Int 8
     */
    KC_INT8 = 'KC_INT8',
    /**
     * Int 6
     */
    KC_INT6 = 'KC_INT6',
    /**
     * Int 9
     */
    KC_INT9 = 'KC_INT9',
    /**
     * Int 5
     */
    KC_INT5 = 'KC_INT5',
    /**
     * Int 2
     */
    KC_INT2 = 'KC_INT2',
    /**
     * Int 7
     */
    KC_INT7 = 'KC_INT7',
    /**
     * ą
     */
    PL_09 = 'PL_09',
    /**
     * ć
     */
    PL_08 = 'PL_08',
    /**
     * ó
     */
    PL_04 = 'PL_04',
    /**
     * ń
     */
    PL_05 = 'PL_05',
    /**
     * ś
     */
    PL_03 = 'PL_03',
    /**
     * ż
     */
    PL_01 = 'PL_01',
    /**
     * ź
     */
    PL_02 = 'PL_02',
    /**
     * ł
     */
    PL_06 = 'PL_06',
    /**
     * ę
     */
    PL_07 = 'PL_07',
    /**
     * Power
     */
    KC_SYSTEM_POWER = 'KC_SYSTEM_POWER',
    /**
     * Indicator brightness- Cycle through layer LED indicator brightness.
     */
    LED_LEVEL = 'LED_LEVEL',
    /**
     * Indicator toggle- Toggle Layer LED indicator.
     */
    MOON_LED_LEVEL = 'MOON_LED_LEVEL',
    /**
     * Brightness up- Screen brightness up
     */
    KC_BRIGHTNESS_UP = 'KC_BRIGHTNESS_UP',
    /**
     * Brightness down- Screen brightness down
     */
    KC_BRIGHTNESS_DOWN = 'KC_BRIGHTNESS_DOWN',
    /**
     * Wake
     */
    KC_SYSTEM_WAKE = 'KC_SYSTEM_WAKE',
    /**
     * Sleep
     */
    KC_SYSTEM_SLEEP = 'KC_SYSTEM_SLEEP',
    /**
     * Shift (
     */
    BR_LSPO = 'BR_LSPO',
    /**
     * ^
     */
    BR_CIRC = 'BR_CIRC',
    /**
     * .
     */
    BR_KPDT = 'BR_KPDT',
    /**
     * º
     */
    BR_MORD = 'BR_MORD',
    /**
     * §
     */
    BR_SECT = 'BR_SECT',
    /**
     * ~
     */
    BR_NDTD = 'BR_NDTD',
    /**
     * °
     */
    BR_DGRE = 'BR_DGRE',
    /**
     * `
     */
    BR_GRAV = 'BR_GRAV',
    /**
     * Shift )
     */
    BR_RSPC = 'BR_RSPC',
    /**
     * ~
     */
    BR_TILD = 'BR_TILD',
    /**
     * ¨
     */
    BR_NDTR = 'BR_NDTR',
    /**
     * |
     */
    BR_PIPE = 'BR_PIPE',
    /**
     * ´
     */
    BR_NDAC = 'BR_NDAC',
    /**
     * \
     */
    BR_BSLS = 'BR_BSLS',
    /**
     * ¬
     */
    BR_NOT = 'BR_NOT',
    /**
     * ¨
     */
    BR_TRMA = 'BR_TRMA',
    /**
     * }
     */
    BR_RCBR = 'BR_RCBR',
    /**
     * £
     */
    BR_PND = 'BR_PND',
    /**
     * ´
     */
    BR_ACUT = 'BR_ACUT',
    /**
     * ;
     */
    BR_SCLN = 'BR_SCLN',
    /**
     * ¹
     */
    BR_1UP = 'BR_1UP',
    /**
     * ³
     */
    BR_3UP = 'BR_3UP',
    /**
     * ª
     */
    BR_FORD = 'BR_FORD',
    /**
     * Ç
     */
    BR_CCDL = 'BR_CCDL',
    /**
     * '
     */
    BR_NDGV = 'BR_NDGV',
    /**
     * :
     */
    BR_COLN = 'BR_COLN',
    /**
     * /
     */
    BR_SLSH = 'BR_SLSH',
    /**
     * [
     */
    BR_LBRC = 'BR_LBRC',
    /**
     * ?
     */
    BR_QUES = 'BR_QUES',
    /**
     * "
     */
    BR_DQT = 'BR_DQT',
    /**
     * ²
     */
    BR_2UP = 'BR_2UP',
    /**
     * ,
     */
    BR_KPCM = 'BR_KPCM',
    /**
     * {
     */
    BR_LCBR = 'BR_LCBR',
    /**
     * ]
     */
    BR_RBRC = 'BR_RBRC',
    /**
     * ¢
     */
    BR_CENT = 'BR_CENT',
    /**
     * ^
     */
    BR_NDCR = 'BR_NDCR',
    /**
     * '
     */
    BR_QUOT = 'BR_QUOT',
    /**
     * «
     */
    UA_01 = 'UA_01',
    /**
     * д
     */
    UA_23 = 'UA_23',
    /**
     * ї
     */
    UA_32 = 'UA_32',
    /**
     * є
     */
    UA_21 = 'UA_21',
    /**
     * и
     */
    UA_16 = 'UA_16',
    /**
     * ф
     */
    UA_31 = 'UA_31',
    /**
     * "
     */
    UA_07 = 'UA_07',
    /**
     * ь
     */
    UA_14 = 'UA_14',
    /**
     * а
     */
    UA_28 = 'UA_28',
    /**
     * ч
     */
    UA_19 = 'UA_19',
    /**
     * к
     */
    UA_41 = 'UA_41',
    /**
     * :
     */
    UA_04 = 'UA_04',
    /**
     * ц
     */
    UA_43 = 'UA_43',
    /**
     * л
     */
    UA_24 = 'UA_24',
    /**
     * б
     */
    UA_13 = 'UA_13',
    /**
     * р
     */
    UA_26 = 'UA_26',
    /**
     * у
     */
    UA_42 = 'UA_42',
    /**
     * я
     */
    UA_20 = 'UA_20',
    /**
     * п
     */
    UA_27 = 'UA_27',
    /**
     * щ
     */
    UA_35 = 'UA_35',
    /**
     * о
     */
    UA_25 = 'UA_25',
    /**
     * [
     */
    UA_08 = 'UA_08',
    /**
     * ж
     */
    UA_22 = 'UA_22',
    /**
     * х
     */
    UA_33 = 'UA_33',
    /**
     * №
     */
    UA_06 = 'UA_06',
    /**
     * ю
     */
    UA_12 = 'UA_12',
    /**
     * '
     */
    UA_10 = 'UA_10',
    /**
     * в
     */
    UA_29 = 'UA_29',
    /**
     * й
     */
    UA_44 = 'UA_44',
    /**
     * »
     */
    UA_02 = 'UA_02',
    /**
     * ґ
     */
    UA_37 = 'UA_37',
    /**
     * і
     */
    UA_30 = 'UA_30',
    /**
     * ;
     */
    UA_05 = 'UA_05',
    /**
     * ]
     */
    UA_09 = 'UA_09',
    /**
     * н
     */
    UA_39 = 'UA_39',
    /**
     * г
     */
    UA_38 = 'UA_38',
    /**
     * ш
     */
    UA_36 = 'UA_36',
    /**
     * т
     */
    UA_15 = 'UA_15',
    /**
     * з
     */
    UA_34 = 'UA_34',
    /**
     * с
     */
    UA_18 = 'UA_18',
    /**
     * .
     */
    UA_11 = 'UA_11',
    /**
     * е
     */
    UA_40 = 'UA_40',
    /**
     * ?
     */
    UA_03 = 'UA_03',
    /**
     * м
     */
    UA_17 = 'UA_17',
    /**
     * ´
     */
    CH_ACUT = 'CH_ACUT',
    /**
     * |
     */
    CH_PIPE = 'CH_PIPE',
    /**
     * °
     */
    CH_RING = 'CH_RING',
    /**
     * -
     */
    CH_MINS = 'CH_MINS',
    /**
     * `
     */
    CH_GRV = 'CH_GRV',
    /**
     * £
     */
    CH_POND = 'CH_POND',
    /**
     * Z
     */
    CH_Z = 'CH_Z',
    /**
     * ü
     */
    CH_UE = 'CH_UE',
    /**
     * \
     */
    CH_BSLS = 'CH_BSLS',
    /**
     * _
     */
    CH_UNDS = 'CH_UNDS',
    /**
     * ~
     */
    CH_TILD = 'CH_TILD',
    /**
     * +
     */
    CH_PLUS = 'CH_PLUS',
    /**
     * ?
     */
    CH_QST = 'CH_QST',
    /**
     * ¦
     */
    CH_BRBR = 'CH_BRBR',
    /**
     * (
     */
    CH_LPRN = 'CH_LPRN',
    /**
     * ¢
     */
    CH_CENT = 'CH_CENT',
    /**
     * ]
     */
    CH_RBRC = 'CH_RBRC',
    /**
     * !
     */
    CH_EXLM = 'CH_EXLM',
    /**
     * §
     */
    CH_PARA = 'CH_PARA',
    /**
     * ä
     */
    CH_AE = 'CH_AE',
    /**
     * ç
     */
    CH_CELA = 'CH_CELA',
    /**
     * )
     */
    CH_RPRN = 'CH_RPRN',
    /**
     * $
     */
    CH_DLR = 'CH_DLR',
    /**
     * {
     */
    CH_LCBR = 'CH_LCBR',
    /**
     * ^
     */
    CH_CARR = 'CH_CARR',
    /**
     * /
     */
    CH_SLSH = 'CH_SLSH',
    /**
     * ;
     */
    CH_SCLN = 'CH_SCLN',
    /**
     * [
     */
    CH_LBRC = 'CH_LBRC',
    /**
     * <
     */
    CH_LESS = 'CH_LESS',
    /**
     * =
     */
    CH_EQL = 'CH_EQL',
    /**
     * }
     */
    CH_RCBR = 'CH_RCBR',
    /**
     * Shift (
     */
    CH_LSPO = 'CH_LSPO',
    /**
     * Y
     */
    CH_Y = 'CH_Y',
    /**
     * #
     */
    CH_HASH = 'CH_HASH',
    /**
     * @
     */
    CH_AT = 'CH_AT',
    /**
     * ö
     */
    CH_OE = 'CH_OE',
    /**
     * >
     */
    CH_MORE = 'CH_MORE',
    /**
     * *
     */
    CH_PAST = 'CH_PAST',
    /**
     * "
     */
    CH_DQOT = 'CH_DQOT',
    /**
     * ¬
     */
    CH_NOTL = 'CH_NOTL',
    /**
     * Shift )
     */
    CH_RSPC = 'CH_RSPC',
    /**
     * :
     */
    CH_COLN = 'CH_COLN',
    /**
     * '
     */
    CH_QUOT = 'CH_QUOT',
    /**
     * &
     */
    CH_AMPR = 'CH_AMPR',
    /**
     * ¨
     */
    CH_DIER = 'CH_DIER',
    /**
     * €
     */
    CH_EURO = 'CH_EURO',
    /**
     * %
     */
    CH_PERC = 'CH_PERC',
    /**
     * ы
     */
    KK_19 = 'KK_19',
    /**
     * г
     */
    KK_26 = 'KK_26',
    /**
     * н
     */
    KK_27 = 'KK_27',
    /**
     * ь
     */
    KK_04 = 'KK_04',
    /**
     * ш
     */
    KK_25 = 'KK_25',
    /**
     * е
     */
    KK_28 = 'KK_28',
    /**
     * ә
     */
    KK_43 = 'KK_43',
    /**
     * "
     */
    KK_44 = 'KK_44',
    /**
     * ұ
     */
    KK_36 = 'KK_36',
    /**
     * к
     */
    KK_29 = 'KK_29',
    /**
     * я
     */
    KK_09 = 'KK_09',
    /**
     * ъ
     */
    KK_21 = 'KK_21',
    /**
     * в
     */
    KK_18 = 'KK_18',
    /**
     * и
     */
    KK_06 = 'KK_06',
    /**
     * ө
     */
    KK_34 = 'KK_34',
    /**
     * р
     */
    KK_15 = 'KK_15',
    /**
     * ң
     */
    KK_41 = 'KK_41',
    /**
     * ф
     */
    KK_20 = 'KK_20',
    /**
     * қ
     */
    KK_35 = 'KK_35',
    /**
     * у
     */
    KK_30 = 'KK_30',
    /**
     * а
     */
    KK_17 = 'KK_17',
    /**
     * э
     */
    KK_10 = 'KK_10',
    /**
     * ю
     */
    KK_02 = 'KK_02',
    /**
     * ц
     */
    KK_31 = 'KK_31',
    /**
     * һ
     */
    KK_33 = 'KK_33',
    /**
     * №
     */
    KK_01 = 'KK_01',
    /**
     * ч
     */
    KK_08 = 'KK_08',
    /**
     * ,
     */
    KK_39 = 'KK_39',
    /**
     * ж
     */
    KK_11 = 'KK_11',
    /**
     * ғ
     */
    KK_40 = 'KK_40',
    /**
     * .
     */
    KK_38 = 'KK_38',
    /**
     * л
     */
    KK_13 = 'KK_13',
    /**
     * д
     */
    KK_12 = 'KK_12',
    /**
     * і
     */
    KK_42 = 'KK_42',
    /**
     * м
     */
    KK_07 = 'KK_07',
    /**
     * б
     */
    KK_03 = 'KK_03',
    /**
     * з
     */
    KK_23 = 'KK_23',
    /**
     * о
     */
    KK_14 = 'KK_14',
    /**
     * й
     */
    KK_32 = 'KK_32',
    /**
     * х
     */
    KK_22 = 'KK_22',
    /**
     * ү
     */
    KK_37 = 'KK_37',
    /**
     * п
     */
    KK_16 = 'KK_16',
    /**
     * щ
     */
    KK_24 = 'KK_24',
    /**
     * т
     */
    KK_05 = 'KK_05',
    /**
     * ¬
     */
    ES_NOT = 'ES_NOT',
    /**
     * ½
     */
    ES_EURO = 'ES_EURO',
    /**
     * #
     */
    ES_HASH = 'ES_HASH',
    /**
     * Shift )
     */
    ES_RSPC = 'ES_RSPC',
    /**
     * (
     */
    ES_LPRN = 'ES_LPRN',
    /**
     * ´
     */
    ES_ACUT = 'ES_ACUT',
    /**
     * >
     */
    ES_GRTR_MAC = 'ES_GRTR_MAC',
    /**
     * |
     */
    ES_PIPE = 'ES_PIPE',
    /**
     * ª
     */
    ES_ASML = 'ES_ASML',
    /**
     * &
     */
    ES_AMPR = 'ES_AMPR',
    /**
     * Shift (
     */
    ES_LSPO = 'ES_LSPO',
    /**
     * -
     */
    ES_MINS = 'ES_MINS',
    /**
     * ^
     */
    ES_CIRC = 'ES_CIRC',
    /**
     * =
     */
    ES_EQL = 'ES_EQL',
    /**
     * /
     */
    ES_SLSH = 'ES_SLSH',
    /**
     * ]
     */
    ES_RBRC = 'ES_RBRC',
    /**
     * *
     */
    ES_ASTR = 'ES_ASTR',
    /**
     * `
     */
    ES_GRV = 'ES_GRV',
    /**
     * {
     */
    ES_LCBR = 'ES_LCBR',
    /**
     * ç
     */
    ES_CCED = 'ES_CCED',
    /**
     * º
     */
    ES_OVRR = 'ES_OVRR',
    /**
     * +
     */
    ES_PLUS = 'ES_PLUS',
    /**
     * ?
     */
    ES_QUES = 'ES_QUES',
    /**
     * \
     */
    ES_BSLS = 'ES_BSLS',
    /**
     * ¡
     */
    ES_IEXL = 'ES_IEXL',
    /**
     * ~
     */
    ES_TILD = 'ES_TILD',
    /**
     * ñ
     */
    ES_NTIL = 'ES_NTIL',
    /**
     * "
     */
    ES_DQUO = 'ES_DQUO',
    /**
     * '
     */
    ES_APOS = 'ES_APOS',
    /**
     * ·
     */
    ES_OVDT = 'ES_OVDT',
    /**
     * >
     */
    ES_GRTR = 'ES_GRTR',
    /**
     * :
     */
    ES_COLN = 'ES_COLN',
    /**
     * <
     */
    ES_LESS = 'ES_LESS',
    /**
     * ;
     */
    ES_SCLN = 'ES_SCLN',
    /**
     * @
     */
    ES_AT = 'ES_AT',
    /**
     * \
     */
    ES_BSLS_MAC = 'ES_BSLS_MAC',
    /**
     * ¿
     */
    ES_IQUE = 'ES_IQUE',
    /**
     * [
     */
    ES_LBRC = 'ES_LBRC',
    /**
     * _
     */
    ES_UNDS = 'ES_UNDS',
    /**
     * }
     */
    ES_RCBR = 'ES_RCBR',
    /**
     * )
     */
    ES_RPRN = 'ES_RPRN',
    /**
     * <
     */
    ES_LESS_MAC = 'ES_LESS_MAC',
    /**
     * Ñ
     */
    ES_LA_07 = 'ES_LA_07',
    /**
     * ñ
     */
    ES_LA_08 = 'ES_LA_08',
    /**
     * }
     */
    ES_LA_18 = 'ES_LA_18',
    /**
     * @
     */
    ES_LA_03 = 'ES_LA_03',
    /**
     * ?
     */
    ES_LA_27 = 'ES_LA_27',
    /**
     * "
     */
    ES_LA_37 = 'ES_LA_37',
    /**
     * #
     */
    ES_LA_36 = 'ES_LA_36',
    /**
     * (
     */
    ES_LA_30 = 'ES_LA_30',
    /**
     * [
     */
    ES_LA_19 = 'ES_LA_19',
    /**
     * ¿
     */
    ES_LA_26 = 'ES_LA_26',
    /**
     * :
     */
    ES_LA_11 = 'ES_LA_11',
    /**
     * -
     */
    ES_LA_10 = 'ES_LA_10',
    /**
     * /
     */
    ES_LA_32 = 'ES_LA_32',
    /**
     * |
     */
    ES_LA_40 = 'ES_LA_40',
    /**
     * '
     */
    ES_LA_28 = 'ES_LA_28',
    /**
     * ,
     */
    ES_LA_14 = 'ES_LA_14',
    /**
     * ^
     */
    ES_LA_05 = 'ES_LA_05',
    /**
     * ;
     */
    ES_LA_13 = 'ES_LA_13',
    /**
     * {
     */
    ES_LA_20 = 'ES_LA_20',
    /**
     * %
     */
    ES_LA_34 = 'ES_LA_34',
    /**
     * ¨
     */
    ES_LA_23 = 'ES_LA_23',
    /**
     * <
     */
    ES_LA_16 = 'ES_LA_16',
    /**
     * ´
     */
    ES_LA_24 = 'ES_LA_24',
    /**
     * _
     */
    ES_LA_09 = 'ES_LA_09',
    /**
     * .
     */
    ES_LA_12 = 'ES_LA_12',
    /**
     * +
     */
    ES_LA_22 = 'ES_LA_22',
    /**
     * $
     */
    ES_LA_35 = 'ES_LA_35',
    /**
     * ]
     */
    ES_LA_17 = 'ES_LA_17',
    /**
     * ¬
     */
    ES_LA_02 = 'ES_LA_02',
    /**
     * \
     */
    ES_LA_01 = 'ES_LA_01',
    /**
     * >
     */
    ES_LA_15 = 'ES_LA_15',
    /**
     * !
     */
    ES_LA_38 = 'ES_LA_38',
    /**
     * (
     */
    ES_LA_31 = 'ES_LA_31',
    /**
     * &
     */
    ES_LA_33 = 'ES_LA_33',
    /**
     * ¡
     */
    ES_LA_25 = 'ES_LA_25',
    /**
     * `
     */
    ES_LA_04 = 'ES_LA_04',
    /**
     * °
     */
    ES_LA_39 = 'ES_LA_39',
    /**
     * =
     */
    ES_LA_29 = 'ES_LA_29',
    /**
     * *
     */
    ES_LA_21 = 'ES_LA_21',
    /**
     * ~
     */
    ES_LA_06 = 'ES_LA_06',
    /**
     * _
     */
    SI_UNDS = 'SI_UNDS',
    /**
     * Š
     */
    SI_SCAR = 'SI_SCAR',
    /**
     * .
     */
    SI_DOT = 'SI_DOT',
    /**
     * )
     */
    SI_RPRN = 'SI_RPRN',
    /**
     * Shift (
     */
    ST_LSPO = 'ST_LSPO',
    /**
     * ˝
     */
    SI_DACU = 'SI_DACU',
    /**
     * ¨
     */
    SI_DIAE = 'SI_DIAE',
    /**
     * ¤
     */
    SI_CURR = 'SI_CURR',
    /**
     * "
     */
    SI_DQUO = 'SI_DQUO',
    /**
     * ´
     */
    SI_ACCU = 'SI_ACCU',
    /**
     * [
     */
    SI_LBRC = 'SI_LBRC',
    /**
     * |
     */
    SI_PIPE = 'SI_PIPE',
    /**
     * *
     */
    SI_ASTR = 'SI_ASTR',
    /**
     * Y
     */
    SI_Y = 'SI_Y',
    /**
     * ×
     */
    SI_MUL = 'SI_MUL',
    /**
     * Shift )
     */
    ST_RSPC = 'ST_RSPC',
    /**
     * ß
     */
    SI_SS = 'SI_SS',
    /**
     * `
     */
    SI_GRV = 'SI_GRV',
    /**
     * :
     */
    SI_COLN = 'SI_COLN',
    /**
     * Ł
     */
    SI_CLST = 'SI_CLST',
    /**
     * ˘
     */
    SI_BREV = 'SI_BREV',
    /**
     * -
     */
    SI_MINS = 'SI_MINS',
    /**
     * Z
     */
    SI_Z = 'SI_Z',
    /**
     * \
     */
    SI_BSLS = 'SI_BSLS',
    /**
     * ˛
     */
    SI_OGON = 'SI_OGON',
    /**
     * ;
     */
    SI_SCLN = 'SI_SCLN',
    /**
     * $
     */
    SI_DLR = 'SI_DLR',
    /**
     * >
     */
    SI_RABK = 'SI_RABK',
    /**
     * Đ
     */
    SI_DSTR = 'SI_DSTR',
    /**
     * €
     */
    SI_EURO = 'SI_EURO',
    /**
     * Č
     */
    SI_CCAR = 'SI_CCAR',
    /**
     * @
     */
    SI_AT = 'SI_AT',
    /**
     * ˙
     */
    SI_DOTA = 'SI_DOTA',
    /**
     * ł
     */
    SI_LLST = 'SI_LLST',
    /**
     * Ć
     */
    SI_CACU = 'SI_CACU',
    /**
     * +
     */
    SI_PLUS = 'SI_PLUS',
    /**
     * ¸
     */
    SI_CEDL = 'SI_CEDL',
    /**
     * (
     */
    SI_LPRN = 'SI_LPRN',
    /**
     * =
     */
    SI_EQL = 'SI_EQL',
    /**
     * {
     */
    SI_LCBR = 'SI_LCBR',
    /**
     * '
     */
    SI_QUOT = 'SI_QUOT',
    /**
     * Ž
     */
    SI_ZCAR = 'SI_ZCAR',
    /**
     * /
     */
    SI_SLSH = 'SI_SLSH',
    /**
     * ,
     */
    SI_COMM = 'SI_COMM',
    /**
     * }
     */
    SI_RCBR = 'SI_RCBR',
    /**
     * ]
     */
    SI_RBRC = 'SI_RBRC',
    /**
     * %
     */
    SI_PERC = 'SI_PERC',
    /**
     * ^
     */
    SI_CIRC = 'SI_CIRC',
    /**
     * &
     */
    SI_AMPR = 'SI_AMPR',
    /**
     * ~
     */
    SI_TILD = 'SI_TILD',
    /**
     * ÷
     */
    SI_DIV = 'SI_DIV',
    /**
     * <
     */
    SI_LABK = 'SI_LABK',
    /**
     * °
     */
    SI_DEG = 'SI_DEG',
    /**
     * #
     */
    SI_HASH = 'SI_HASH',
    /**
     * ˇ
     */
    SI_CARN = 'SI_CARN',
    /**
     * !
     */
    SI_EXLM = 'SI_EXLM',
    /**
     * ?
     */
    SI_QUES = 'SI_QUES',
    /**
     * 2
     */
    KC_2 = 'KC_2',
    /**
     * 1
     */
    KC_1 = 'KC_1',
    /**
     * 7
     */
    KC_7 = 'KC_7',
    /**
     * 0
     */
    KC_0 = 'KC_0',
    /**
     * 5
     */
    KC_5 = 'KC_5',
    /**
     * 8
     */
    KC_8 = 'KC_8',
    /**
     * 4
     */
    KC_4 = 'KC_4',
    /**
     * 9
     */
    KC_9 = 'KC_9',
    /**
     * 3
     */
    KC_3 = 'KC_3',
    /**
     * 6
     */
    KC_6 = 'KC_6',
    /**
     * num -
     */
    KC_KP_MINUS = 'KC_KP_MINUS',
    /**
     * num 0
     */
    KC_KP_0 = 'KC_KP_0',
    /**
     * num 5
     */
    KC_KP_5 = 'KC_KP_5',
    /**
     * Numlock
     */
    KC_NUMLOCK = 'KC_NUMLOCK',
    /**
     * num 8
     */
    KC_KP_8 = 'KC_KP_8',
    /**
     * num 7
     */
    KC_KP_7 = 'KC_KP_7',
    /**
     * num ,
     */
    KC_KP_COMMA = 'KC_KP_COMMA',
    /**
     * num 9
     */
    KC_KP_9 = 'KC_KP_9',
    /**
     * num .
     */
    KC_KP_DOT = 'KC_KP_DOT',
    /**
     * num 1
     */
    KC_KP_1 = 'KC_KP_1',
    /**
     * num 4
     */
    KC_KP_4 = 'KC_KP_4',
    /**
     * num /
     */
    KC_KP_SLASH = 'KC_KP_SLASH',
    /**
     * num 2
     */
    KC_KP_2 = 'KC_KP_2',
    /**
     * num =
     */
    KC_KP_EQUAL = 'KC_KP_EQUAL',
    /**
     * num Enter
     */
    KC_KP_ENTER = 'KC_KP_ENTER',
    /**
     * num 6
     */
    KC_KP_6 = 'KC_KP_6',
    /**
     * num +
     */
    KC_KP_PLUS = 'KC_KP_PLUS',
    /**
     * num *
     */
    KC_KP_ASTERISK = 'KC_KP_ASTERISK',
    /**
     * num 3
     */
    KC_KP_3 = 'KC_KP_3',
    /**
     * Copy (macOS)
     */
    KC_MAC_COPY = 'KC_MAC_COPY',
    /**
     * Alt )- Space Cadet Alt: When held, acts as Alt; when tapped, sends ")" (closing parentheses).
     */
    KC_RAPC = 'KC_RAPC',
    /**
     * Undo (macOS)
     */
    KC_MAC_UNDO = 'KC_MAC_UNDO',
    /**
     * Ctrl )- Space Cadet Control: When held, acts as Control; when tapped, sends ")" (closing parentheses).
     */
    KC_RCPC = 'KC_RCPC',
    /**
     * Cut (macOS)
     */
    KC_MAC_CUT = 'KC_MAC_CUT',
    /**
     * Alt (- Space Cadet Alt: When held, acts as Alt; when tapped, sends "(" (opening parentheses).
     */
    KC_LAPO = 'KC_LAPO',
    /**
     * None
     */
    KC_NO = 'KC_NO',
    /**
     * Shift )- Space Cadet Shift: When held, acts as Shift; when tapped, sends ")" (closing parentheses). Great for your right shift key.
     */
    KC_RSPC = 'KC_RSPC',
    /**
     * Copy
     */
    KC_PC_COPY = 'KC_PC_COPY',
    /**
     * Ctrl (- Space Cadet Control: When held, acts as Control; when tapped, sends "(" (opening parentheses).
     */
    KC_LCPO = 'KC_LCPO',
    /**
     * Cut
     */
    KC_PC_CUT = 'KC_PC_CUT',
    /**
     * Power
     */
    KC_POWER = 'KC_POWER',
    /**
     * Paste
     */
    KC_PC_PASTE = 'KC_PC_PASTE',
    /**
     * Paste (macOS)
     */
    KC_MAC_PASTE = 'KC_MAC_PASTE',
    /**
     * Shift (- Space Cadet Shift: When held, acts as Shift; when tapped, sends "(" (opening parentheses). Great for your left shift key.
     */
    KC_LSPO = 'KC_LSPO',
    /**
     * Pause
     */
    KC_PAUSE = 'KC_PAUSE',
    /**
     * Oryx- Used to pair your keyboard with Oryx for Live Training.
     */
    WEBUSB_PAIR = 'WEBUSB_PAIR',
    /**
     * Undo
     */
    KC_PC_UNDO = 'KC_PC_UNDO',
    /**
     * Find
     */
    KC_FIND = 'KC_FIND',
    /**
     * 
     */
    KC_TRANSPARENT = 'KC_TRANSPARENT',
    /**
     * S
     */
    BP_S = 'BP_S',
    /**
     * 3
     */
    BP_3 = 'BP_3',
    /**
     * /
     */
    BP_SLSH = 'BP_SLSH',
    /**
     * W
     */
    BP_W = 'BP_W',
    /**
     * |
     */
    BP_PIPE = 'BP_PIPE',
    /**
     * _
     */
    BP_UNDS = 'BP_UNDS',
    /**
     * !
     */
    BP_EXLM = 'BP_EXLM',
    /**
     * ?
     */
    BP_QEST = 'BP_QEST',
    /**
     * <
     */
    BP_LESS = 'BP_LESS',
    /**
     * ^
     */
    BP_CIRC = 'BP_CIRC',
    /**
     * F
     */
    BP_F = 'BP_F',
    /**
     * ù
     */
    BP_UGRV = 'BP_UGRV',
    /**
     * U
     */
    BP_U = 'BP_U',
    /**
     * D
     */
    BP_D = 'BP_D',
    /**
     * ~
     */
    BP_TILD = 'BP_TILD',
    /**
     * Y
     */
    BP_Y = 'BP_Y',
    /**
     * €
     */
    BP_EURO = 'BP_EURO',
    /**
     * ¨
     */
    BP_DTRM = 'BP_DTRM',
    /**
     * E
     */
    BP_E = 'BP_E',
    /**
     * C
     */
    BP_C = 'BP_C',
    /**
     * ¶
     */
    BP_PARG = 'BP_PARG',
    /**
     * H
     */
    BP_H = 'BP_H',
    /**
     * N
     */
    BP_N = 'BP_N',
    /**
     * Shift (
     */
    BP_LSPO = 'BP_LSPO',
    /**
     * -
     */
    BP_MINS = 'BP_MINS',
    /**
     * \
     */
    BP_BSLS = 'BP_BSLS',
    /**
     * 4
     */
    BP_4 = 'BP_4',
    /**
     * >
     */
    BP_GRTR = 'BP_GRTR',
    /**
     * 6
     */
    BP_6 = 'BP_6',
    /**
     * J
     */
    BP_J = 'BP_J',
    /**
     * 1
     */
    BP_1 = 'BP_1',
    /**
     * M
     */
    BP_M = 'BP_M',
    /**
     * R
     */
    BP_R = 'BP_R',
    /**
     * X
     */
    BP_X = 'BP_X',
    /**
     * ê
     */
    BP_ECIR = 'BP_ECIR',
    /**
     * "
     */
    BP_DQOT = 'BP_DQOT',
    /**
     * é
     */
    BP_ECUT = 'BP_ECUT',
    /**
     * ;
     */
    BP_SCLN = 'BP_SCLN',
    /**
     * [
     */
    BP_LBRC = 'BP_LBRC',
    /**
     * œ
     */
    BP_OE = 'BP_OE',
    /**
     * G
     */
    BP_G = 'BP_G',
    /**
     * %
     */
    BP_PERC = 'BP_PERC',
    /**
     * #
     */
    BP_HASH = 'BP_HASH',
    /**
     * °
     */
    BP_DEGR = 'BP_DEGR',
    /**
     * «
     */
    BP_LGIL = 'BP_LGIL',
    /**
     * +
     */
    BP_PLUS = 'BP_PLUS',
    /**
     * 7
     */
    BP_7 = 'BP_7',
    /**
     * :
     */
    BP_COLN = 'BP_COLN',
    /**
     * è
     */
    BP_EGRV = 'BP_EGRV',
    /**
     * 5
     */
    BP_5 = 'BP_5',
    /**
     * æ
     */
    BP_AE = 'BP_AE',
    /**
     * V
     */
    BP_V = 'BP_V',
    /**
     * I
     */
    BP_I = 'BP_I',
    /**
     * &
     */
    BP_AMPR = 'BP_AMPR',
    /**
     * –
     */
    BP_NDSH_MAC = 'BP_NDSH_MAC',
    /**
     * $
     */
    BP_DLR = 'BP_DLR',
    /**
     * A
     */
    BP_A = 'BP_A',
    /**
     * ç
     */
    BP_CCED = 'BP_CCED',
    /**
     * ,
     */
    BP_COMM = 'BP_COMM',
    /**
     * 0
     */
    BP_0 = 'BP_0',
    /**
     * P
     */
    BP_P = 'BP_P',
    /**
     * @
     */
    BP_AT = 'BP_AT',
    /**
     * ^
     */
    BP_DCRC = 'BP_DCRC',
    /**
     * O
     */
    BP_O = 'BP_O',
    /**
     * =
     */
    BP_EQL = 'BP_EQL',
    /**
     * *
     */
    BP_ASTR = 'BP_ASTR',
    /**
     * B
     */
    BP_B = 'BP_B',
    /**
     * )
     */
    BP_RPRN = 'BP_RPRN',
    /**
     * L
     */
    BP_L = 'BP_L',
    /**
     * }
     */
    BP_RCBR = 'BP_RCBR',
    /**
     * –
     */
    BP_NDSH = 'BP_NDSH',
    /**
     * T
     */
    BP_T = 'BP_T',
    /**
     * ]
     */
    BP_RBRC = 'BP_RBRC',
    /**
     * —
     */
    BP_MDSH = 'BP_MDSH',
    /**
     * (
     */
    BP_LPRN = 'BP_LPRN',
    /**
     * K
     */
    BP_K = 'BP_K',
    /**
     * Shift )
     */
    BP_RSPC = 'BP_RSPC',
    /**
     * `
     */
    BP_GRV = 'BP_GRV',
    /**
     * 9
     */
    BP_9 = 'BP_9',
    /**
     * à
     */
    BP_AGRV = 'BP_AGRV',
    /**
     * »
     */
    BP_RGIL = 'BP_RGIL',
    /**
     * .
     */
    BP_DOT = 'BP_DOT',
    /**
     * Q
     */
    BP_Q = 'BP_Q',
    /**
     * 8
     */
    BP_8 = 'BP_8',
    /**
     * 2
     */
    BP_2 = 'BP_2',
    /**
     * '
     */
    BP_APOS = 'BP_APOS',
    /**
     * Z
     */
    BP_Z = 'BP_Z',
    /**
     * {
     */
    BP_LCBR = 'BP_LCBR',
    /**
     * +
     */
    HU_PLUS = 'HU_PLUS',
    /**
     * 2
     */
    HU_2 = 'HU_2',
    /**
     * "
     */
    HU_DQOT = 'HU_DQOT',
    /**
     * 1
     */
    HU_1 = 'HU_1',
    /**
     * /
     */
    HU_SLSH = 'HU_SLSH',
    /**
     * @
     */
    HU_AT = 'HU_AT',
    /**
     * !
     */
    HU_EXLM = 'HU_EXLM',
    /**
     * [
     */
    HU_LBRC = 'HU_LBRC',
    /**
     * X
     */
    HU_X = 'HU_X',
    /**
     * 9
     */
    HU_9 = 'HU_9',
    /**
     * S
     */
    HU_S = 'HU_S',
    /**
     * T
     */
    HU_T = 'HU_T',
    /**
     * ´
     */
    HU_ACUT = 'HU_ACUT',
    /**
     * Q
     */
    HU_Q = 'HU_Q',
    /**
     * -
     */
    HU_MINS = 'HU_MINS',
    /**
     * `
     */
    HU_GRV = 'HU_GRV',
    /**
     * 3
     */
    HU_3 = 'HU_3',
    /**
     * ö
     */
    HU_OE = 'HU_OE',
    /**
     * 8
     */
    HU_8 = 'HU_8',
    /**
     * ;
     */
    HU_SCLN = 'HU_SCLN',
    /**
     * %
     */
    HU_PERC = 'HU_PERC',
    /**
     * ő
     */
    HU_OEE = 'HU_OEE',
    /**
     * E
     */
    HU_E = 'HU_E',
    /**
     * á
     */
    HU_AA = 'HU_AA',
    /**
     * °
     */
    HU_RING = 'HU_RING',
    /**
     * 6
     */
    HU_6 = 'HU_6',
    /**
     * H
     */
    HU_H = 'HU_H',
    /**
     * N
     */
    HU_N = 'HU_N',
    /**
     * C
     */
    HU_C = 'HU_C',
    /**
     * ß
     */
    HU_SS = 'HU_SS',
    /**
     * K
     */
    HU_K = 'HU_K',
    /**
     * L
     */
    HU_L = 'HU_L',
    /**
     * {
     */
    HU_LCBR = 'HU_LCBR',
    /**
     * P
     */
    HU_P = 'HU_P',
    /**
     * (
     */
    HU_LPRN = 'HU_LPRN',
    /**
     * í
     */
    HU_II = 'HU_II',
    /**
     * V
     */
    HU_V = 'HU_V',
    /**
     * 7
     */
    HU_7 = 'HU_7',
    /**
     * >
     */
    HU_MORE = 'HU_MORE',
    /**
     * é
     */
    HU_EE = 'HU_EE',
    /**
     * O
     */
    HU_O = 'HU_O',
    /**
     * '
     */
    HU_QUOT = 'HU_QUOT',
    /**
     * ÷
     */
    HU_DIV = 'HU_DIV',
    /**
     * B
     */
    HU_B = 'HU_B',
    /**
     * ,
     */
    HU_COMM = 'HU_COMM',
    /**
     * \
     */
    HU_BSLS = 'HU_BSLS',
    /**
     * *
     */
    HU_ASTR = 'HU_ASTR',
    /**
     * I
     */
    HU_I = 'HU_I',
    /**
     * ]
     */
    HU_RBRC = 'HU_RBRC',
    /**
     * ü
     */
    HU_UE = 'HU_UE',
    /**
     * ^
     */
    HU_CIRC = 'HU_CIRC',
    /**
     * D
     */
    HU_D = 'HU_D',
    /**
     * ű
     */
    HU_UEE = 'HU_UEE',
    /**
     * :
     */
    HU_COLN = 'HU_COLN',
    /**
     * ú
     */
    HU_UU = 'HU_UU',
    /**
     * )
     */
    HU_RPRN = 'HU_RPRN',
    /**
     * _
     */
    HU_UNDS = 'HU_UNDS',
    /**
     * ×
     */
    HU_CRSS = 'HU_CRSS',
    /**
     * U
     */
    HU_U = 'HU_U',
    /**
     * Y
     */
    HU_Y = 'HU_Y',
    /**
     * R
     */
    HU_R = 'HU_R',
    /**
     * <
     */
    HU_LESS = 'HU_LESS',
    /**
     * W
     */
    HU_W = 'HU_W',
    /**
     * 5
     */
    HU_5 = 'HU_5',
    /**
     * Z
     */
    HU_Z = 'HU_Z',
    /**
     * Shift (
     */
    HU_LSPO = 'HU_LSPO',
    /**
     * .
     */
    HU_DOT = 'HU_DOT',
    /**
     * $
     */
    HU_DLR = 'HU_DLR',
    /**
     * &
     */
    HU_AMPR = 'HU_AMPR',
    /**
     * J
     */
    HU_J = 'HU_J',
    /**
     * ˘
     */
    HU_BRV = 'HU_BRV',
    /**
     * F
     */
    HU_F = 'HU_F',
    /**
     * 0
     */
    HU_0 = 'HU_0',
    /**
     * G
     */
    HU_G = 'HU_G',
    /**
     * A
     */
    HU_A = 'HU_A',
    /**
     * |
     */
    HU_PIPE = 'HU_PIPE',
    /**
     * Shift )
     */
    HU_RSPC = 'HU_RSPC',
    /**
     * M
     */
    HU_M = 'HU_M',
    /**
     * 4
     */
    HU_4 = 'HU_4',
    /**
     * €
     */
    HU_EURO = 'HU_EURO',
    /**
     * ó
     */
    HU_OO = 'HU_OO',
    /**
     * ?
     */
    HU_QST = 'HU_QST',
    /**
     * #
     */
    HU_HASH = 'HU_HASH',
    /**
     * }
     */
    HU_RCBR = 'HU_RCBR',
    /**
     * ~
     */
    HU_TILD = 'HU_TILD',
    /**
     * §
     */
    HU_PARA = 'HU_PARA',
    /**
     * =
     */
    HU_EQL = 'HU_EQL',
    /**
     * ?
     */
    NO_QUES = 'NO_QUES',
    /**
     * ;
     */
    NO_SCLN = 'NO_SCLN',
    /**
     * `
     */
    NO_GRV = 'NO_GRV',
    /**
     * &
     */
    NO_AMPR = 'NO_AMPR',
    /**
     * $
     */
    NO_DLR = 'NO_DLR',
    /**
     * Þ
     */
    NO_TH = 'NO_TH',
    /**
     * \
     */
    NO_BSLS = 'NO_BSLS',
    /**
     * (
     */
    NO_LPRN = 'NO_LPRN',
    /**
     * |
     */
    NO_PIPE = 'NO_PIPE',
    /**
     * å
     */
    NO_AM = 'NO_AM',
    /**
     * Shift )
     */
    NO_RSPC = 'NO_RSPC',
    /**
     * }
     */
    NO_RCBR = 'NO_RCBR',
    /**
     * "
     */
    NO_QUOT = 'NO_QUOT',
    /**
     * ]
     */
    NO_RBRC = 'NO_RBRC',
    /**
     * €
     */
    NO_EURO = 'NO_EURO',
    /**
     * '
     */
    NO_APOS = 'NO_APOS',
    /**
     * æ
     */
    NO_OSLH = 'NO_OSLH',
    /**
     * "
     */
    NO_QUO2 = 'NO_QUO2',
    /**
     * /
     */
    NO_SLSH = 'NO_SLSH',
    /**
     * \
     */
    NO_BSLS_ALT = 'NO_BSLS_ALT',
    /**
     * ø
     */
    NO_AE = 'NO_AE',
    /**
     * <
     */
    NO_LESS = 'NO_LESS',
    /**
     * #
     */
    NO_PND = 'NO_PND',
    /**
     * |
     */
    NO_PIPE_ALT = 'NO_PIPE_ALT',
    /**
     * {
     */
    NO_LCBR = 'NO_LCBR',
    /**
     * _
     */
    NO_UNDS = 'NO_UNDS',
    /**
     * @
     */
    NO_AT = 'NO_AT',
    /**
     * )
     */
    NO_RPRN = 'NO_RPRN',
    /**
     * +
     */
    NO_PLUS = 'NO_PLUS',
    /**
     * Ð
     */
    NO_ETH = 'NO_ETH',
    /**
     * ^
     */
    NO_CIRC = 'NO_CIRC',
    /**
     * =
     */
    NO_EQL = 'NO_EQL',
    /**
     * µ
     */
    NO_MU = 'NO_MU',
    /**
     * :
     */
    NO_COLN = 'NO_COLN',
    /**
     * >
     */
    NO_GRTR = 'NO_GRTR',
    /**
     * Shift (
     */
    NO_LSPO = 'NO_LSPO',
    /**
     * [
     */
    NO_LBRC = 'NO_LBRC',
    /**
     * ´
     */
    NO_ACUT = 'NO_ACUT',
    /**
     * ½
     */
    NO_HALF = 'NO_HALF',
    /**
     * -
     */
    NO_MINS = 'NO_MINS',
    /**
     * á
     */
    NO_AC_A = 'NO_AC_A',
    /**
     * ¤
     */
    NO_BULT = 'NO_BULT',
    /**
     * ~
     */
    NO_TILD = 'NO_TILD',
    /**
     * Ö
     */
    NO_UMLT = 'NO_UMLT',
    /**
     * }
     */
    PT_OSX_RCBR = 'PT_OSX_RCBR',
    /**
     * √
     */
    PT_OSX_SQRT = 'PT_OSX_SQRT',
    /**
     * @
     */
    PT_OSX_AT = 'PT_OSX_AT',
    /**
     * ‘
     */
    PT_OSX_LSQU = 'PT_OSX_LSQU',
    /**
     * ﬁ
     */
    PT_OSX_FI = 'PT_OSX_FI',
    /**
     * Œ
     */
    PT_OSX_OE = 'PT_OSX_OE',
    /**
     * €
     */
    PT_OSX_EURO = 'PT_OSX_EURO',
    /**
     * &
     */
    PT_OSX_AMPR = 'PT_OSX_AMPR',
    /**
     * «
     */
    PT_OSX_LDAQ = 'PT_OSX_LDAQ',
    /**
     * |
     */
    PT_OSX_PIPE = 'PT_OSX_PIPE',
    /**
     * ﬂ
     */
    PT_OSX_FL = 'PT_OSX_FL',
    /**
     * “
     */
    PT_OSX_LDQU = 'PT_OSX_LDQU',
    /**
     * )
     */
    PT_OSX_RPRN = 'PT_OSX_RPRN',
    /**
     * »
     */
    PT_OSX_RDAQ = 'PT_OSX_RDAQ',
    /**
     * π
     */
    PT_OSX_PI = 'PT_OSX_PI',
    /**
     * Æ
     */
    PT_OSX_AE = 'PT_OSX_AE',
    /**
     * µ
     */
    PT_OSX_MICR = 'PT_OSX_MICR',
    /**
     * ⁄
     */
    PT_OSX_FRSL = 'PT_OSX_FRSL',
    /**
     * ˆ (dead)
     */
    PT_OSX_DCIR = 'PT_OSX_DCIR',
    /**
     * ¥
     */
    PT_OSX_YEN = 'PT_OSX_YEN',
    /**
     * £
     */
    PT_OSX_PND = 'PT_OSX_PND',
    /**
     * ·
     */
    PT_OSX_MDDT = 'PT_OSX_MDDT',
    /**
     * ¯
     */
    PT_OSX_MACR = 'PT_OSX_MACR',
    /**
     *  (Apple logo)
     */
    PT_OSX_APPL = 'PT_OSX_APPL',
    /**
     * •
     */
    PT_OSX_BULT = 'PT_OSX_BULT',
    /**
     * ’
     */
    PT_OSX_RSQU = 'PT_OSX_RSQU',
    /**
     * '
     */
    PT_OSX_QUOT = 'PT_OSX_QUOT',
    /**
     * –
     */
    PT_OSX_NDSH = 'PT_OSX_NDSH',
    /**
     * ˜ (dead)
     */
    PT_OSX_STIL = 'PT_OSX_STIL',
    /**
     * ©
     */
    PT_OSX_COPY = 'PT_OSX_COPY',
    /**
     * ?
     */
    PT_OSX_QUES = 'PT_OSX_QUES',
    /**
     * ¬
     */
    PT_OSX_NOT = 'PT_OSX_NOT',
    /**
     * º
     */
    PT_OSX_MORD = 'PT_OSX_MORD',
    /**
     * ≤
     */
    PT_OSX_LTEQ = 'PT_OSX_LTEQ',
    /**
     * ı
     */
    PT_OSX_DLSI = 'PT_OSX_DLSI',
    /**
     * #
     */
    PT_OSX_HASH = 'PT_OSX_HASH',
    /**
     * ¨ (dead)
     */
    PT_OSX_DIAE = 'PT_OSX_DIAE',
    /**
     * ∞
     */
    PT_OSX_INFN = 'PT_OSX_INFN',
    /**
     * ´ (dead)
     */
    PT_OSX_ACUT = 'PT_OSX_ACUT',
    /**
     * å
     */
    PT_OSX_ARNG = 'PT_OSX_ARNG',
    /**
     * _
     */
    PT_OSX_UNDS = 'PT_OSX_UNDS',
    /**
     * ∆
     */
    PT_OSX_INCR = 'PT_OSX_INCR',
    /**
     * ∫
     */
    PT_OSX_INTG = 'PT_OSX_INTG',
    /**
     * ≠
     */
    PT_OSX_NEQL = 'PT_OSX_NEQL',
    /**
     * ¢
     */
    PT_OSX_CENT = 'PT_OSX_CENT',
    /**
     * ƒ
     */
    PT_OSX_FHK = 'PT_OSX_FHK',
    /**
     * ‡
     */
    PT_OSX_DDAG = 'PT_OSX_DDAG',
    /**
     * >
     */
    PT_OSX_RABK = 'PT_OSX_RABK',
    /**
     * -
     */
    PT_OSX_MINS = 'PT_OSX_MINS',
    /**
     * [
     */
    PT_OSX_LBRC = 'PT_OSX_LBRC',
    /**
     * *
     */
    PT_OSX_ASTR = 'PT_OSX_ASTR',
    /**
     * %
     */
    PT_OSX_PERC = 'PT_OSX_PERC',
    /**
     * ª
     */
    PT_OSX_FORD = 'PT_OSX_FORD',
    /**
     * ` (dead)
     */
    PT_OSX_GRV = 'PT_OSX_GRV',
    /**
     * ∑
     */
    PT_OSX_NARS = 'PT_OSX_NARS',
    /**
     * ∂
     */
    PT_OSX_PDIF = 'PT_OSX_PDIF',
    /**
     * ]
     */
    PT_OSX_RBRC = 'PT_OSX_RBRC',
    /**
     * §
     */
    PT_OSX_SECT = 'PT_OSX_SECT',
    /**
     * ˇ
     */
    PT_OSX_CARN = 'PT_OSX_CARN',
    /**
     * ±
     */
    PT_OSX_PLMN = 'PT_OSX_PLMN',
    /**
     * "
     */
    PT_OSX_DQUO = 'PT_OSX_DQUO',
    /**
     * ≈
     */
    PT_OSX_AEQL = 'PT_OSX_AEQL',
    /**
     * ∏
     */
    PT_OSX_NARP = 'PT_OSX_NARP',
    /**
     * <
     */
    PT_OSX_LABK = 'PT_OSX_LABK',
    /**
     * ¸
     */
    PT_OSX_CEDL = 'PT_OSX_CEDL',
    /**
     * ÷
     */
    PT_OSX_DIV = 'PT_OSX_DIV',
    /**
     * °
     */
    PT_OSX_DEG = 'PT_OSX_DEG',
    /**
     * „
     */
    PT_OSX_DLQU = 'PT_OSX_DLQU',
    /**
     * ;
     */
    PT_OSX_SCLN = 'PT_OSX_SCLN',
    /**
     * †
     */
    PT_OSX_DAGG = 'PT_OSX_DAGG',
    /**
     * +
     */
    PT_OSX_PLUS = 'PT_OSX_PLUS',
    /**
     * Ø
     */
    PT_OSX_OSTR = 'PT_OSX_OSTR',
    /**
     * (backslash)
     */
    PT_OSX_BSLS = 'PT_OSX_BSLS',
    /**
     * ¡
     */
    PT_OSX_IEXL = 'PT_OSX_IEXL',
    /**
     * ®
     */
    PT_OSX_REGD = 'PT_OSX_REGD',
    /**
     * :
     */
    PT_OSX_COLN = 'PT_OSX_COLN',
    /**
     * $
     */
    PT_OSX_DLR = 'PT_OSX_DLR',
    /**
     * ›
     */
    PT_OSX_RSAQ = 'PT_OSX_RSAQ',
    /**
     * …
     */
    PT_OSX_ELLP = 'PT_OSX_ELLP',
    /**
     * ≥
     */
    PT_OSX_GTEQ = 'PT_OSX_GTEQ',
    /**
     * ~ (dead)
     */
    PT_OSX_TILD = 'PT_OSX_TILD',
    /**
     * Ω
     */
    PT_OSX_OMEG = 'PT_OSX_OMEG',
    /**
     * /
     */
    PT_OSX_SLSH = 'PT_OSX_SLSH',
    /**
     * ‹
     */
    PT_OSX_LSAQ = 'PT_OSX_LSAQ',
    /**
     * !
     */
    PT_OSX_EXLM = 'PT_OSX_EXLM',
    /**
     * ˝
     */
    PT_OSX_DACU = 'PT_OSX_DACU',
    /**
     * ‰
     */
    PT_OSX_PERM = 'PT_OSX_PERM',
    /**
     * =
     */
    PT_OSX_EQL = 'PT_OSX_EQL',
    /**
     * ◊
     */
    PT_OSX_LOZN = 'PT_OSX_LOZN',
    /**
     * (
     */
    PT_OSX_LPRN = 'PT_OSX_LPRN',
    /**
     * ”
     */
    PT_OSX_RDQU = 'PT_OSX_RDQU',
    /**
     * ß
     */
    PT_OSX_SS = 'PT_OSX_SS',
    /**
     * ™
     */
    PT_OSX_TM = 'PT_OSX_TM',
    /**
     * ‚
     */
    PT_OSX_SLQU = 'PT_OSX_SLQU',
    /**
     * Ç
     */
    PT_OSX_CCED = 'PT_OSX_CCED',
    /**
     * ˙
     */
    PT_OSX_DOTA = 'PT_OSX_DOTA',
    /**
     * ˛
     */
    PT_OSX_OGON = 'PT_OSX_OGON',
    /**
     * —
     */
    PT_OSX_MDSH = 'PT_OSX_MDSH',
    /**
     * ¿
     */
    PT_OSX_IQUE = 'PT_OSX_IQUE',
    /**
     * ^ (dead)
     */
    PT_OSX_CIRC = 'PT_OSX_CIRC',
    /**
     * ¶
     */
    PT_OSX_PILC = 'PT_OSX_PILC',
    /**
     * ˚
     */
    PT_OSX_RNGA = 'PT_OSX_RNGA',
    /**
     * {
     */
    PT_OSX_LCBR = 'PT_OSX_LCBR',
    /**
     * Saturation +
     */
    RGB_SAI = 'RGB_SAI',
    /**
     * Animation speed +
     */
    RGB_SPI = 'RGB_SPI',
    /**
     * Toggle layer colors- Toggle per layer colors
     */
    TOGGLE_LAYER_COLOR = 'TOGGLE_LAYER_COLOR',
    /**
     * Set color- Sets the keyboard underglow or key backlight color.
     */
    RGB = 'RGB',
    /**
     * Switch animation
     */
    RGB_MOD = 'RGB_MOD',
    /**
     * Animation speed -
     */
    RGB_SPD = 'RGB_SPD',
    /**
     * Brightness +
     */
    RGB_VAI = 'RGB_VAI',
    /**
     * Hue +
     */
    RGB_HUI = 'RGB_HUI',
    /**
     * Saturation -
     */
    RGB_SAD = 'RGB_SAD',
    /**
     * Hue -
     */
    RGB_HUD = 'RGB_HUD',
    /**
     * Toggle lighting
     */
    RGB_TOG = 'RGB_TOG',
    /**
     * Brightness -
     */
    RGB_VAD = 'RGB_VAD',
    /**
     * Stop animation
     */
    RGB_SLD = 'RGB_SLD',
    /**
     * Æ
     */
    SS_ADIA = 'SS_ADIA',
    /**
     * <
     */
    ES_LA_41 = 'ES_LA_41',
    /**
     * >
     */
    ES_LA_42 = 'ES_LA_42',
}
  